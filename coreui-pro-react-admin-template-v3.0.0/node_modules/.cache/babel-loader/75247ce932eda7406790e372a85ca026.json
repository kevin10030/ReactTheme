{"ast":null,"code":"import PropTypes from 'prop-types'; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var CFadeProps = [].concat(TransitionPropTypeKeys, ['baseClass', 'baseClassActive', 'tag']);\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      console.error(\"\\\"\".concat(propName, \"\\\" property of \\\"\").concat(componentName, \"\\\" has been deprecated.\\n\").concat(explanation));\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}","map":{"version":3,"sources":["D:/CSH/Samples/Theme/coreui-pro-react-admin-template-v3.0.0/node_modules/@coreui/react/src/utils/helper.js"],"names":["PropTypes","TransitionPropTypeKeys","CFadeProps","canUseDOM","window","document","createElement","targetPropType","oneOfType","string","func","DOMElement","shape","current","any","tagPropType","$$typeof","symbol","render","arrayOf","props","propName","componentName","Element","Error","deprecated","propType","explanation","validate","console","error","rest"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;;AACA,OAAO,IAAMC,sBAAsB,GAAG,CACpC,IADoC,EAEpC,cAFoC,EAGpC,eAHoC,EAIpC,QAJoC,EAKpC,OALoC,EAMpC,MANoC,EAOpC,SAPoC,EAQpC,SARoC,EASpC,YAToC,EAUpC,WAVoC,EAWpC,QAXoC,EAYpC,WAZoC,EAapC,UAboC,CAA/B;AAgBP,OAAO,IAAMC,UAAU,aAClBD,sBADkB,GAErB,WAFqB,EAGrB,iBAHqB,EAIrB,KAJqB,EAAhB;AAOP,OAAO,IAAME,SAAS,GAAG,CAAC,EACxB,OAAOC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACC,QADP,IAEAD,MAAM,CAACC,QAAP,CAAgBC,aAHQ,CAAnB;AAMP,OAAO,IAAMC,cAAc,GAAGP,SAAS,CAACQ,SAAV,CAAoB,CAChDR,SAAS,CAACS,MADsC,EAEhDT,SAAS,CAACU,IAFsC,EAGhDC,UAHgD,EAIhDX,SAAS,CAACY,KAAV,CAAgB;AAAEC,EAAAA,OAAO,EAAEb,SAAS,CAACc;AAArB,CAAhB,CAJgD,CAApB,CAAvB;AAOP,OAAO,IAAMC,WAAW,GAAGf,SAAS,CAACQ,SAAV,CAAoB,CAC7CR,SAAS,CAACU,IADmC,EAE7CV,SAAS,CAACS,MAFmC,EAG7CT,SAAS,CAACY,KAAV,CAAgB;AAAEI,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,MAAtB;AAA8BC,EAAAA,MAAM,EAAElB,SAAS,CAACU;AAAhD,CAAhB,CAH6C,EAI7CV,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACQ,SAAV,CAAoB,CACpCR,SAAS,CAACU,IAD0B,EAEpCV,SAAS,CAACS,MAF0B,EAGpCT,SAAS,CAACY,KAAV,CAAgB;AAAEI,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,MAAtB;AAA8BC,EAAAA,MAAM,EAAElB,SAAS,CAACU;AAAhD,CAAhB,CAHoC,CAApB,CAAlB,CAJ6C,CAApB,CAApB;AAYP,OAAO,SAASC,UAAT,CAAoBS,KAApB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoD;AACzD,MAAI,EAAEF,KAAK,CAACC,QAAD,CAAL,YAA2BE,OAA7B,CAAJ,EAA2C;AACzC,WAAO,IAAIC,KAAJ,CACL,mBACEH,QADF,GAEE,iBAFF,GAGEC,aAHF,GAIE,mEALG,CAAP;AAOD;AACF;AAED,OAAO,SAASG,UAAT,CAAoBC,QAApB,EAA8BC,WAA9B,EAA2C;AAChD,SAAO,SAASC,QAAT,CAAkBR,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAA2D;AAChE,QAAIF,KAAK,CAACC,QAAD,CAAL,KAAoB,IAApB,IAA4B,OAAOD,KAAK,CAACC,QAAD,CAAZ,KAA2B,WAA3D,EAAwE;AACtEQ,MAAAA,OAAO,CAACC,KAAR,aACMT,QADN,8BACgCC,aADhC,sCACwEK,WADxE;AAGD;;AAL+D,sCAANI,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAMhE,WAAOL,QAAQ,MAAR,UAASN,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,SAA4CS,IAA5C,EAAP;AACD,GAPD;AAQD","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n// Duplicated Transition.propType keys to ensure that Reactstrap builds\r\n// for distribution properly exclude these keys for nested child HTML attributes\r\n// since `react-transition-group` removes propTypes in production builds.\r\nexport const TransitionPropTypeKeys = [\r\n  'in',\r\n  'mountOnEnter',\r\n  'unmountOnExit',\r\n  'appear',\r\n  'enter',\r\n  'exit',\r\n  'timeout',\r\n  'onEnter',\r\n  'onEntering',\r\n  'onEntered',\r\n  'onExit',\r\n  'onExiting',\r\n  'onExited'\r\n];\r\n\r\nexport const CFadeProps = [\r\n  ...TransitionPropTypeKeys,\r\n  'baseClass',\r\n  'baseClassActive',\r\n  'tag'\r\n]\r\n\r\nexport const canUseDOM = !!(\r\n  typeof window !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\nexport const targetPropType = PropTypes.oneOfType([\r\n  PropTypes.string,\r\n  PropTypes.func,\r\n  DOMElement,\r\n  PropTypes.shape({ current: PropTypes.any }),\r\n]);\r\n\r\nexport const tagPropType = PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.string,\r\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\r\n  PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.string,\r\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\r\n  ]))\r\n]);\r\n\r\n\r\nexport function DOMElement(props, propName, componentName) {\r\n  if (!(props[propName] instanceof Element)) {\r\n    return new Error(\r\n      'Invalid prop `' +\r\n        propName +\r\n        '` supplied to `' +\r\n        componentName +\r\n        '`. Expected prop to be an instance of Element. Validation failed.'\r\n    );\r\n  }\r\n}\r\n\r\nexport function deprecated(propType, explanation) {\r\n  return function validate(props, propName, componentName, ...rest) {\r\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\r\n      console.error(\r\n        `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`\r\n      )\r\n    }\r\n    return propType(props, propName, componentName, ...rest);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}