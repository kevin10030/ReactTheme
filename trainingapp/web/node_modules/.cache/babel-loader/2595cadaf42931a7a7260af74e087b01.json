{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Layout\\\\AuthNavbar.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\"; // core components\n\nimport Button from \"./Button\";\nimport styles from \"../../assets/material/jss/material-dashboard-pro-react/components/authNavbarStyle.js\";\nimport Logo from '../../assets/images/logo.png';\nconst useStyles = makeStyles(styles);\nexport default function AuthNavbar(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  }; // verifies if routeName is the one active (in browser input)\n\n\n  const activeRoute = routeName => {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  };\n\n  const classes = useStyles();\n  const {\n    color,\n    brandText\n  } = props;\n  const appBarClasses = cx({\n    [\" \" + classes[color]]: color\n  });\n  var list = /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/modules\",\n    className: classes.navLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dashboard, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Dashboard\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/pricing-page\",\n    className: cx(classes.navLink, {\n      [classes.navLinkActive]: activeRoute(\"/auth/pricing-page\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MonetizationOn, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Pricing\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/register-page\",\n    className: cx(classes.navLink, {\n      [classes.navLinkActive]: activeRoute(\"/auth/register-page\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PersonAdd, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Register\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/login-page\",\n    className: cx(classes.navLink, {\n      [classes.navLinkActive]: activeRoute(\"/auth/login-page\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fingerprint, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Login\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/auth/lock-screen-page\",\n    className: cx(classes.navLink, {\n      [classes.navLinkActive]: activeRoute(\"/auth/lock-screen-page\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOpen, {\n    className: classes.listItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Lock\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar + appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, list), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.sidebarButton,\n    color: \"transparent\",\n    justIcon: true,\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, list)))));\n}\nAuthNavbar.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Layout/AuthNavbar.js"],"names":["React","cx","PropTypes","NavLink","makeStyles","AppBar","Toolbar","Hidden","Drawer","List","ListItem","ListItemText","Dashboard","Menu","PersonAdd","Fingerprint","LockOpen","MonetizationOn","Button","styles","Logo","useStyles","AuthNavbar","props","open","setOpen","useState","handleDrawerToggle","activeRoute","routeName","window","location","href","indexOf","classes","color","brandText","appBarClasses","list","listItem","navLink","listItemIcon","listItemText","navLinkActive","appBar","container","flex","sidebarButton","paper","drawerPaper","keepMounted","propTypes","oneOf","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\";\n\n// core components\nimport Button from \"./Button\";\nimport styles from \"../../assets/material/jss/material-dashboard-pro-react/components/authNavbarStyle.js\";\n\nimport Logo from '../../assets/images/logo.png';\n\nconst useStyles = makeStyles(styles);\n\nexport default function AuthNavbar(props) {\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = routeName => {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  };\n  const classes = useStyles();\n  const { color, brandText } = props;\n  const appBarClasses = cx({\n    [\" \" + classes[color]]: color\n  });\n  var list = (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <NavLink to={\"/modules\"} className={classes.navLink}>\n          <Dashboard className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Dashboard\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/pricing-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/pricing-page\")\n          })}\n        >\n          <MonetizationOn className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Pricing\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/register-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/register-page\")\n          })}\n        >\n          <PersonAdd className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Register\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/login-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/login-page\")\n          })}\n        >\n          <Fingerprint className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Login\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/lock-screen-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/lock-screen-page\")\n          })}\n        >\n          <LockOpen className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Lock\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n    </List>\n  );\n  return (\n    <AppBar position=\"static\" className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Hidden smDown>\n          <div className={classes.flex}>\n            {/* <Button href=\"#\" className={classes.title} color=\"transparent\">\n              {brandText}\n            </Button> */}\n          </div>\n        </Hidden>\n        <Hidden mdUp>\n          <div className={classes.flex}>\n            {/* <Button href=\"#\" className={classes.title} color=\"transparent\">\n              MD Pro React\n            </Button> */}\n          </div>\n        </Hidden>\n        <Hidden smDown>{list}</Hidden>\n        <Hidden mdUp>\n          <Button\n            className={classes.sidebarButton}\n            color=\"transparent\"\n            justIcon\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </Button>\n        </Hidden>\n        <Hidden mdUp>\n          <Hidden mdUp>\n            <Drawer\n              variant=\"temporary\"\n              anchor={\"right\"}\n              open={open}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              onClose={handleDrawerToggle}\n              ModalProps={{\n                keepMounted: true // Better open performance on mobile.\n              }}\n            >\n              {list}\n            </Drawer>\n          </Hidden>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nAuthNavbar.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}