{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Admin\\\\Categories.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect, CAlert, CToast, CToastBody, CToastHeader, CToaster } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport CategoryService from '../../API/CategoryService';\nimport axios from 'axios';\nexport default function Categories() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < categoryList.length) return currentPage * currentPagination;\n    return categoryList.length;\n  };\n\n  const fields = [{\n    key: 'name',\n    label: 'Category Name',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'parentName',\n    label: 'Parent Category',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [showtoast, showToast] = React.useState(true);\n  const [toastMessage, setToastMessage] = React.useState('');\n  const [toastClass, setToastClass] = React.useState('success');\n  let toasts = [{\n    position: 'static'\n  }, {\n    position: 'static'\n  }, {\n    position: 'top-right',\n    autohide: 3000\n  }];\n\n  let toasters = (() => {\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  })();\n\n  const [categoryList, setCategoryList] = React.useState([]);\n  const [categoryName, setCategoryName] = React.useState('');\n  const [parent, setParent] = React.useState(0);\n  React.useEffect(() => {\n    getCategoryList();\n  }, []);\n\n  const getCategoryList = async () => {\n    // get categories from backend service via service api\n    await CategoryService.getCategoryList('', res => {\n      console.log(res);\n      setCategoryList(res);\n    }, err => {});\n  }; // const [isAddDevice, setIsAddDevice] = useState(true)\n  // const [editId, setEditId] = useState(-1)\n\n\n  const deleteCategory = item => {\n    // console.log(item)\n    CategoryService.deleteCategory(item.categoryId, res => {\n      setToastClass('success');\n      setToastMessage('Success: ' + res);\n      showToast(true);\n    }, err => {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    CategoryService.createCategory({\n      name: categoryName,\n      parent: parent\n    }, res => {\n      setToastClass('success');\n      setToastMessage('Success: ' + res);\n      showToast(true);\n      setCategoryName('');\n      setParent(0);\n    }, err => {});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Categories\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: categoryList,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    } // onPagesChange={(val) => console.log('new pages:', val)}\n    ,\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'parentName': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, item.parent !== 0 && categoryList.find(pCat => pCat.categoryId === item.parent).name),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            deleteCategory(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 113\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + categoryList.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, 'Add Category'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"categoryname-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Category Name\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    label: \"Category Name\",\n    name: \"categoryname-input\",\n    id: \"categoryname-input\",\n    placeholder: \"Please input category name\",\n    autoComplete: \"given-name\",\n    onChange: e => setCategoryName(e.target.value),\n    value: categoryName,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"Parent Category\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"parent\",\n    label: \"Parent Category\",\n    id: \"parent\",\n    onChange: e => setParent(e.target.value),\n    value: parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"None\"), categoryList.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    value: category.categoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }, category.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 97\n    }\n  }), \" Save\"))))), /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, Object.keys(toasters).map(toasterKey => /*#__PURE__*/React.createElement(CToaster, {\n    position: toasterKey,\n    key: 'toaster' + toasterKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, toasters[toasterKey].map((toast, key) => {\n    return /*#__PURE__*/React.createElement(CToast, {\n      key: 'toast' + key,\n      show: showtoast,\n      autohide: true,\n      fade: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CToastHeader, {\n      closeButton: toast.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, \"Toast title\"), /*#__PURE__*/React.createElement(CToastBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, toastMessage));\n  }))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Admin/Categories.jsx"],"names":["React","Component","useEffect","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CAlert","CToast","CToastBody","CToastHeader","CToaster","CIcon","CategoryService","axios","Categories","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","categoryList","length","fields","key","label","_style","width","sorter","filter","showtoast","showToast","toastMessage","setToastMessage","toastClass","setToastClass","toasts","position","autohide","toasters","reduce","toast","push","setCategoryList","categoryName","setCategoryName","parent","setParent","getCategoryList","res","console","log","err","deleteCategory","item","categoryId","handleSubmit","event","preventDefault","createCategory","name","doubleArrows","align","val","find","pCat","e","textAlign","display","target","value","map","category","Object","keys","toasterKey","closeButton"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect,CAlert,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport CategoryService from '../../API/CategoryService';\r\nimport axios from 'axios';\r\n\r\nexport default function Categories() {\r\n  const { useState } = React;\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal = (currentPage) => {\r\n    if (currentPage * currentPagination < categoryList.length)\r\n      return currentPage * currentPagination;\r\n    return categoryList.length;\r\n  }\r\n  const fields = [\r\n    { key: 'name', label:'Category Name', _style: { width: '30%' } },\r\n    { key: 'parentName', label:'Parent Category', _style: { width: '30%' } },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n\r\n  const [showtoast, showToast] = React.useState(true);\r\n  const [toastMessage, setToastMessage] = React.useState('');\r\n  const [toastClass, setToastClass] = React.useState('success');\r\n\r\n  let toasts = [\r\n    { position: 'static'},\r\n    { position: 'static'},\r\n    { position: 'top-right', autohide: 3000 }\r\n  ];\r\n  let toasters = (()=>{\r\n    return toasts.reduce((toasters, toast) => {\r\n      toasters[toast.position] = toasters[toast.position] || []\r\n      toasters[toast.position].push(toast)\r\n      return toasters\r\n    }, {})\r\n  })();\r\n\r\n  \r\n  const [categoryList, setCategoryList] = React.useState([])\r\n  const [categoryName, setCategoryName] = React.useState('');\r\n  const [parent, setParent] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    getCategoryList();\r\n  }, []);\r\n\r\n  const getCategoryList = async () => {\r\n    // get categories from backend service via service api\r\n    await CategoryService.getCategoryList('', (res) => {      \r\n      console.log(res)     \r\n      setCategoryList(res); \r\n    }, (err) => {\r\n    });\r\n  };\r\n  \r\n  // const [isAddDevice, setIsAddDevice] = useState(true)\r\n  // const [editId, setEditId] = useState(-1)\r\n\r\n  const deleteCategory = (item) => {\r\n    // console.log(item)\r\n    CategoryService.deleteCategory(item.categoryId, (res) => {\r\n      setToastClass('success');\r\n      setToastMessage('Success: ' + res);\r\n      showToast(true);\r\n    }, (err) => {\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    CategoryService.createCategory(\r\n      {\r\n        name: categoryName,\r\n        parent: parent\r\n      }, (res) => {\r\n        setToastClass('success');\r\n        setToastMessage('Success: ' + res);\r\n        showToast(true);\r\n\r\n        setCategoryName('');\r\n        setParent(0);\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow>\r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >\r\n              Categories\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={categoryList}\r\n                fields={fields}\r\n                // columnFilter\r\n                tableFilter\r\n                // footer\r\n                itemsPerPageSelect\r\n                itemsPerPage={currentPagination}\r\n                dark={false}\r\n                hover={false}\r\n                border={true}\r\n                outlined={true}\r\n                loading={false}\r\n                sorter\r\n                // clickableRows\r\n                pagination={{ doubleArrows: true, align: 'center' }}\r\n                // loading\r\n                // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\r\n                onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n                }\r\n                // onPagesChange={(val) => console.log('new pages:', val)}\r\n                onPaginationChange={(val) => {\r\n                  console.log('new pagination:', val);\r\n                  setCurrentPagination(val);\r\n                }}\r\n                // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n                // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n                // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n                // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n                scopedSlots={{\r\n                  'parentName':\r\n                  (item) => (\r\n                    <td>\r\n                      { item.parent !== 0 &&\r\n                          categoryList.find(pCat => pCat.categoryId === item.parent).name\r\n                      }                      \r\n                    </td>\r\n                  ),\r\n                  'actions':\r\n                    item => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                          <CButton color=\"light\"  onClick={(e) => { e.preventDefault(); deleteCategory(item) }}><CIcon name=\"cil-trash\" /></CButton>\r\n                        </td>\r\n                      )\r\n                    }\r\n                }}\r\n              />\r\n              <div style={{ textAlign: 'right' }}>{\r\n                ((currentPage - 1) * currentPagination + 1) + '-' + getLastVal(currentPage) + ' of ' + categoryList.length\r\n              }\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n          <CCard custom>\r\n            <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex' }}>\r\n              {\r\n                'Add Category'\r\n              }\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\" name='simpleForm'>\r\n                {/* onSubmit={handleSubmit} */}\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"categoryname-input\">Category Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"text\"\r\n                      label=\"Category Name\"\r\n                      name=\"categoryname-input\"\r\n                      id=\"categoryname-input\"\r\n                      placeholder=\"Please input category name\"\r\n                      autoComplete=\"given-name\"\r\n                      onChange={e => setCategoryName(e.target.value)}\r\n                      value={categoryName}\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"parent\">Parent Category</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CSelect \r\n                      custom name=\"parent\" \r\n                      label=\"Parent Category\"\r\n                      id=\"parent\"\r\n                      onChange={e => setParent(e.target.value)}\r\n                      value={parent}\r\n                    >\r\n                    <option value={0}>None</option>\r\n                    {categoryList.map((category) => (\r\n                      <option value={category.categoryId}>{category.name}</option>\r\n                    ))}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <hr />\r\n                <CButton type=\"submit\" variant=\"outline\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>\r\n                {/* <CButton type=\"reset\" variant=\"outline\" className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton> */}\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol sm=\"12\" lg=\"6\">\r\n          {Object.keys(toasters).map((toasterKey) => (\r\n            <CToaster\r\n              position={toasterKey}\r\n              key={'toaster' + toasterKey}\r\n            >\r\n              {\r\n                toasters[toasterKey].map((toast, key)=>{\r\n                return(\r\n                  <CToast\r\n                    key={'toast' + key}\r\n                    show={showtoast}\r\n                    autohide={true}\r\n                    fade={true}\r\n                    >\r\n                      <CToastHeader closeButton={toast.closeButton}>\r\n                          Toast title\r\n                        </CToastHeader>\r\n                        <CToastBody>\r\n                          {toastMessage}\r\n                        </CToastBody>\r\n                      \r\n                    {/* </CAlert> */}\r\n                  </CToast>\r\n                  )\r\n                })\r\n                }\r\n            </CToaster>\r\n          ))}\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}