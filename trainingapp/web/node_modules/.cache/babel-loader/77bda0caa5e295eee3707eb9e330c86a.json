{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\containers\\\\DefaultLayout\\\\DefaultSidebar.js\";\nimport React, { Component, Suspense } from 'react';\nimport PropTypes from 'prop-types'; //import classNames from 'classnames';\n//import * as router from 'react-router-dom';\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarNavDivider, CSidebarNavTitle, CNavItem, CProgress, CSidebarMinimizer } from '@coreui/react'; // import { CIcon } from '@coreui/icons-react';\n//logo\n\nimport logo from \"../../assets/coreui/img/brand/coreui-react-pro-neg.svg\";\nimport sygnet from \"../../assets/coreui/img/brand/coreui-signet.svg\"; // sidebar nav config\n\nimport navigation from '../../_nav';\n\nclass DefaultSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      minimize: props.sidebarMinimize,\n      k: 2\n    };\n    this.lastSidebarMinimize = props.sidebarMinimize;\n  }\n\n  render() {\n    const {\n      sidebarShow,\n      sidebarMinimize,\n      onChange,\n      location\n    } = this.props;\n    /*\n    const classesSidebar = classNames(\n    'c-sidebar-dark'\n    );\n    */\n\n    if (sidebarMinimize !== this.lastSidebarMinimize) {\n      this.setState({\n        minimize: sidebarMinimize\n      });\n      this.lastSidebarMinimize = sidebarMinimize;\n    }\n\n    return /*#__PURE__*/React.createElement(CSidebar, {\n      show: sidebarShow,\n      unfoldable: true,\n      minimize: this.state.minimize,\n      onShowUpdate: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CSidebarBrand, {\n      imgFull: {\n        width: 118,\n        height: 46,\n        alt: 'Logo',\n        src: logo\n      },\n      linkProps: {\n        href: 'https://trainingapp.godataplush.com/',\n        target: '_blank'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Suspense, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CSidebarNav, {\n      navConfig: navigation,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CSidebarNavDivider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(CSidebarMinimizer, {\n      className: \"c-d-md-down-none\",\n      onClick: () => {\n        this.setState({\n          minimize: !this.state.minimize\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nDefaultSidebar.propTypes = {\n  children: PropTypes.node\n};\nDefaultSidebar.defaultProps = {};\nexport default DefaultSidebar;","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/containers/DefaultLayout/DefaultSidebar.js"],"names":["React","Component","Suspense","PropTypes","CSidebar","CSidebarBrand","CSidebarNav","CSidebarNavDivider","CSidebarNavTitle","CNavItem","CProgress","CSidebarMinimizer","navigation","DefaultSidebar","constructor","props","state","activeTab","minimize","sidebarMinimize","k","lastSidebarMinimize","render","sidebarShow","onChange","location","setState","width","height","alt","src","logo","href","target","propTypes","children","node","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,SACEC,QADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,iBARF,QASO,eATP,C,CAWA;AAEA;;;sEAKA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,cAAN,SAA6BZ,SAA7B,CAAuC;AAErCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,GADA;AAEXC,MAAAA,QAAQ,EAAEH,KAAK,CAACI,eAFL;AAGXC,MAAAA,CAAC,EAAE;AAHQ,KAAb;AAKA,SAAKC,mBAAL,GAA2BN,KAAK,CAACI,eAAjC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AACJC,MAAAA,WADI;AAEJJ,MAAAA,eAFI;AAGJK,MAAAA,QAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKV,KALT;AAOA;AACJ;AACA;AACA;AACA;;AAEI,QAAII,eAAe,KAAG,KAAKE,mBAA3B,EAA+C;AAC7C,WAAKK,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEC;AAAX,OAAd;AACA,WAAKE,mBAAL,GAA2BF,eAA3B;AACD;;AAED,wBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEI,WADR;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAHvB;AAIE,MAAA,YAAY,EAAEM,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMA,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE;AAAEG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,EAAtB;AAA0BC,QAAAA,GAAG,EAAE,MAA/B;AAAuCC,QAAAA,GAAG,EAAEC;AAA5C,OADb;AAEI,MAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE,sCAAR;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,eAUA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAErB,UAAxB;AAAoC,MAAA,QAAQ,EAAEa,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAVA,eA+BA,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,kBAA7B;AAAgD,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKC,QAAL,CAAc;AAACR,UAAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAvB,SAAd;AAAgD,OAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BA,CADF;AAmCD;;AApEoC;;AAuEvCL,cAAc,CAACqB,SAAf,GAA2B;AACzBC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC;AADK,CAA3B;AAIAvB,cAAc,CAACwB,YAAf,GAA8B,EAA9B;AAGA,eAAexB,cAAf","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n//import classNames from 'classnames';\n//import * as router from 'react-router-dom';\nimport {\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CNavItem,\n  CProgress,\n  CSidebarMinimizer\n} from '@coreui/react';\n\n// import { CIcon } from '@coreui/icons-react';\n\n//logo\nimport logo from '../../assets/coreui/img/brand/coreui-react-pro-neg.svg'\nimport sygnet from '../../assets/coreui/img/brand/coreui-signet.svg'\n\n\n// sidebar nav config\nimport navigation from '../../_nav';\n\nclass DefaultSidebar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: '1',\n      minimize: props.sidebarMinimize,\n      k: 2\n    };\n    this.lastSidebarMinimize = props.sidebarMinimize;\n  }\n\n  render() {\n\n    const {\n      sidebarShow,\n      sidebarMinimize,\n      onChange,\n      location\n    } = this.props;\n\n    /*\n    const classesSidebar = classNames(\n    'c-sidebar-dark'\n    );\n    */\n\n    if (sidebarMinimize!==this.lastSidebarMinimize){\n      this.setState({minimize: sidebarMinimize});\n      this.lastSidebarMinimize = sidebarMinimize;\n    }\n\n    return (\n      <CSidebar\n        show={sidebarShow}\n        unfoldable\n        minimize={this.state.minimize}\n        onShowUpdate={onChange}\n      >\n      <CSidebarBrand\n          imgFull={{ width: 118, height: 46, alt: 'Logo', src: logo}}          \n          linkProps={{ href: 'https://trainingapp.godataplush.com/', target: '_blank'}}\n      />\n      <Suspense>\n        <CSidebarNav navConfig={navigation} location={location}>\n          <CSidebarNavDivider />\n          {/* <CSidebarNavTitle>System Utilization</CSidebarNavTitle>\n          <CNavItem custom className=\"px-3 d-compact-none c-d-minimized-none\">\n            <div className=\"text-uppercase mb-1\"><small><b>CPU Usage</b></small></div>\n            <CProgress size=\"xs\" value=\"25\" color=\"info\" />\n            <small className=\"text-muted\">348 Processes. 1/4 Cores.</small>\n          </CNavItem>\n          <CNavItem custom className=\"px-3 d-compact-none c-d-minimized-none\">\n            <div className=\"text-uppercase mb-1\"><small><b>Memory Usage</b></small></div>\n            <CProgress size=\"xs\" value=\"70\" color=\"warning\" />\n            <small className=\"text-muted\">11444GB/16384MB</small>\n          </CNavItem>\n          <CNavItem custom className=\"px-3 mb-3 d-compact-none c-d-minimized-none\">\n            <div className=\"text-uppercase mb-1\"><small><b>SSD 1 Usage</b></small></div>\n            <CProgress size=\"xs\" value=\"95\" color=\"danger\" />\n            <small className=\"text-muted\">243GB/256GB</small>\n          </CNavItem> */}\n        </CSidebarNav>\n      </Suspense>\n      <CSidebarMinimizer className=\"c-d-md-down-none\" onClick={()=>{this.setState({minimize: !this.state.minimize})}} />\n      </CSidebar>\n    );\n  }\n}\n\nDefaultSidebar.propTypes = {\n  children: PropTypes.node,\n};\n\nDefaultSidebar.defaultProps = {\n};\n\nexport default DefaultSidebar;\n"]},"metadata":{},"sourceType":"module"}