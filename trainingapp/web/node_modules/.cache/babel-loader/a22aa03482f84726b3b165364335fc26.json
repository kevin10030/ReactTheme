{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\DeviceSensorCard.jsx\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Divider } from '../../node_modules/@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport MaterialTable from 'material-table';\nimport DeviceSensorHistory from '../components/DeviceSensorHistory';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    width: 151\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  }\n}));\nexport default function DeviceSensorCard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth(event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  const [columns, setColumns] = useState([{\n    title: 'No',\n    field: 'no',\n    editable: 'onUpdate'\n  }, {\n    title: 'IMEI',\n    field: 'imei',\n    editable: 'onUpdate'\n  }, {\n    title: 'Customer',\n    field: 'customer',\n    lookup: {\n      34: 'Jane',\n      63: 'John'\n    }\n  }, {\n    title: 'Device Name',\n    field: 'deviceName',\n    editable: 'onUpdate'\n  }, {\n    title: 'Device Status',\n    field: 'deviceStatus',\n    editable: 'onUpdate'\n  }, {\n    title: 'HeartBeats',\n    field: 'heartBeats',\n    editable: 'onUpdate'\n  }]);\n  const [data, setData] = useState([{\n    no: '1',\n    imei: '861475030047510',\n    customer: 34,\n    deviceName: 'Raspberry PI 3',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '2',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Raspberry PI 3',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '3',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Raspberry PI 3',\n    deviceStatus: 'Offline',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '4',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Raspberry PI 3',\n    deviceStatus: 'Offline',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '5',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Raspberry PI 3',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '6',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Arduino UO',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '7',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Arduino UO',\n    deviceStatus: 'Offline',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '8',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Arduino UO',\n    deviceStatus: 'Offline',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '9',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Arduino UO',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }, {\n    no: '10',\n    imei: '863158020785889',\n    customer: 63,\n    deviceName: 'Arduino UO',\n    deviceStatus: 'Online',\n    heartBeats: '2hours 30mins'\n  }]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      background: props.backcolor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h5\",\n    style: {\n      color: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, props.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    style: {\n      color: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, props.count)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      padding: 5,\n      background: props.morebgcolor\n    },\n    className: \"flex-container\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#ffffff\"\n    },\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"More Info\"), /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      color: \"#ffffff\",\n      width: 20,\n      marginLeft: 10,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, `\n              \n        .flex-container {\n          padding: 0;\n          margin: 0;\n          list-style: none;\n          \n          display: -webkit-box;\n          display: -moz-box;\n          display: -ms-flexbox;\n          display: -webkit-flex;\n          display: flex;\n            align-items: center;\n            justify-content: center;\n\n        }\n\n        row{\n          width: 100%;\n        }\n\n        .flex-item {\n          background: tomato;\n          padding: 5px;\n          width: 200px;\n          height: 150px;\n          margin: 10px;\n          \n          line-height: 150px;\n          color: white;\n          font-weight: bold;\n          font-size: 3em;\n          text-align: center;\n        }\n      `), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Optional sizes\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Monitor\",\n    columns: columns,\n    data: data,\n    icons: tableIcons,\n    onRowClick: (evt, selectedRow) => setSelectedRow(selectedRow.tableData.id),\n    options: {\n      headerStyle: {\n        backgroundColor: '#039be5',\n        color: '#FFF'\n      },\n      pageSize: 4,\n      pageSizeOptions: [4, 8, 12] // rowStyle: rowData => ({\n      //   // backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\n      // })\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"You can set my maximum width and whether to adapt or not.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"max-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"maxWidth\"), /*#__PURE__*/React.createElement(Select, {\n    autoFocus: true,\n    value: maxWidth,\n    onChange: handleMaxWidthChange,\n    inputProps: {\n      name: 'max-width',\n      id: 'max-width'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"false\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"xs\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"sm\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"md\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"lg\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"xl\"))), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.formControlLabel,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: fullWidth,\n      onChange: handleFullWidthChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 24\n      }\n    }),\n    label: \"Full width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/DeviceSensorCard.jsx"],"names":["React","makeStyles","useTheme","Card","CardContent","CardMedia","IconButton","Typography","SendIcon","Divider","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","MaterialTable","DeviceSensorHistory","useStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","DeviceSensorCard","props","classes","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","columns","setColumns","title","field","editable","lookup","data","setData","no","imei","customer","deviceName","deviceStatus","heartBeats","background","backcolor","color","name","count","cursor","padding","morebgcolor","marginLeft","marginRight","tableIcons","evt","selectedRow","setSelectedRow","tableData","id","headerStyle","backgroundColor","pageSize","pageSizeOptions","form","formControl","formControlLabel"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { Divider } from '../../node_modules/@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MaterialTable from 'material-table'\r\nimport DeviceSensorHistory from '../components/DeviceSensorHistory'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default function DeviceSensorCard(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'No', field: 'no', editable: 'onUpdate' },\r\n    { title: 'IMEI', field: 'imei', editable: 'onUpdate' },\r\n    {\r\n      title: 'Customer',\r\n      field: 'customer',\r\n      lookup: { 34: 'Jane', 63: 'John' },\r\n    },\r\n    { title: 'Device Name', field: 'deviceName', editable: 'onUpdate' },\r\n    { title: 'Device Status', field: 'deviceStatus', editable: 'onUpdate' },\r\n    { title: 'HeartBeats', field: 'heartBeats', editable: 'onUpdate' },\r\n  ]);\r\n  \r\n  const [data, setData] = useState([\r\n    { no: '1', imei: '861475030047510', customer: 34, deviceName:'Raspberry PI 3', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n    { no: '2', imei: '863158020785889', customer: 63, deviceName:'Raspberry PI 3', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n    { no: '3', imei: '863158020785889', customer: 63, deviceName:'Raspberry PI 3', deviceStatus:'Offline', heartBeats:'2hours 30mins' },\r\n    { no: '4', imei: '863158020785889', customer: 63, deviceName:'Raspberry PI 3', deviceStatus:'Offline', heartBeats:'2hours 30mins' },\r\n    { no: '5', imei: '863158020785889', customer: 63, deviceName:'Raspberry PI 3', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n    { no: '6', imei: '863158020785889', customer: 63, deviceName:'Arduino UO', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n    { no: '7', imei: '863158020785889', customer: 63, deviceName:'Arduino UO', deviceStatus:'Offline', heartBeats:'2hours 30mins' },\r\n    { no: '8', imei: '863158020785889', customer: 63, deviceName:'Arduino UO', deviceStatus:'Offline', heartBeats:'2hours 30mins' },\r\n    { no: '9', imei: '863158020785889', customer: 63, deviceName:'Arduino UO', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n    { no: '10', imei: '863158020785889', customer: 63,deviceName:'Arduino UO', deviceStatus:'Online', heartBeats:'2hours 30mins' },\r\n  ]);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Card style={{background:props.backcolor}}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\" style={{color:\"#ffffff\"}} >\r\n            {props.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{color:\"#ffffff\"}}>\r\n            {props.count}\r\n          </Typography>\r\n        </CardContent>\r\n        <Divider/>\r\n        <div style={{cursor:\"pointer\", padding:5, background:props.morebgcolor }} className=\"flex-container\" onClick={handleClickOpen}>\r\n          <span style={{color:\"#ffffff\"}} className=\"row\">More Info</span>\r\n          <SendIcon style={{color:\"#ffffff\",width:20,marginLeft:10,marginRight:10}}/>\r\n        </div>\r\n      </div>\r\n      <style>{`\r\n              \r\n        .flex-container {\r\n          padding: 0;\r\n          margin: 0;\r\n          list-style: none;\r\n          \r\n          display: -webkit-box;\r\n          display: -moz-box;\r\n          display: -ms-flexbox;\r\n          display: -webkit-flex;\r\n          display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n        }\r\n\r\n        row{\r\n          width: 100%;\r\n        }\r\n\r\n        .flex-item {\r\n          background: tomato;\r\n          padding: 5px;\r\n          width: 200px;\r\n          height: 150px;\r\n          margin: 10px;\r\n          \r\n          line-height: 150px;\r\n          color: white;\r\n          font-weight: bold;\r\n          font-size: 3em;\r\n          text-align: center;\r\n        }\r\n      `}</style>\r\n\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\">\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n        <MaterialTable\r\n            title=\"Monitor\"\r\n            columns={columns}\r\n            data={data}\r\n            icons={tableIcons}\r\n            onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n            options={{\r\n              headerStyle: {\r\n                backgroundColor: '#039be5',\r\n                color: '#FFF'\r\n              },\r\n              pageSize:4,\r\n              pageSizeOptions:[4,8,12],\r\n              // rowStyle: rowData => ({\r\n              //   // backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n              // })\r\n            }}           \r\n          />\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}