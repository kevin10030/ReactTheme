{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Admin\\\\Courses.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect } from '@coreui/react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CIcon from '@coreui/icons-react';\nimport CategoryService from '../../API/CategoryService';\nimport CourseService from '../../API/CourseService';\nimport UploadService from '../../API/UploadService';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function Courses() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < categoryList.length) return currentPage * currentPagination;\n    return categoryList.length;\n  };\n\n  const fields = [{\n    key: 'Title',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [value, setValue] = React.useState(0);\n  const [categoryList, setCategoryList] = React.useState([]);\n  const [courseList, setCourseList] = React.useState([]);\n  const [levelList, setLevelList] = React.useState([]);\n  const [courseTitle, setCourseTitle] = React.useState('');\n  const [courseDescription, setCourseDescription] = React.useState('');\n  const [level, setLevel] = React.useState(0);\n  const [category, setCategory] = React.useState(0);\n  const [image, setImage] = React.useState(null);\n  const [imageHeight, setImageHeight] = React.useState('0px');\n  const [toast, showToast] = React.useState(false);\n  const [toastMessage, setToastMessage] = React.useState('');\n  const [toastClass, setToastClass] = React.useState('success');\n  const [loading, setLoading] = React.useState(false);\n  const [imageFile, setImageFile] = React.useState('');\n  React.useEffect(() => {\n    getCategoryList();\n    setLevelList([{\n      levelId: 1,\n      name: 'Beginner'\n    }, {\n      levelId: 2,\n      name: 'Intermediate'\n    }, {\n      levelId: 3,\n      name: 'Expert'\n    }]);\n  }, []);\n\n  const getCategoryList = async () => {\n    setLoading(true); // get categories from backend service via service api\n\n    await CategoryService.getCategoryList('', res => {\n      console.log(res);\n      setCategoryList(res);\n      setLoading(false);\n    }, err => {\n      setLoading(false);\n    });\n  };\n\n  const getCourseList = async () => {\n    setLoading(true); // get categories from backend service via service api\n\n    await CourseService.getCourseList('', res => {\n      console.log(res);\n      setCourseList(res);\n      setLoading(false);\n    }, err => {\n      setLoading(false);\n    });\n  };\n\n  function deleteCourse(courseId) {\n    setIsLoading(true);\n    CourseService.deleteCourse(item.categoryId, res => {\n      setToastClass('success');\n      setToastMessage('Success: ' + res);\n      showToast(true);\n      setIsLoading(false);\n    }, err => {\n      setIsLoading(false);\n    });\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function fileUpload(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    var re = /(?:\\.([^.]+))?$/;\n    var ext = re.exec(file.name)[1];\n    axios({\n      url: 'https://hfa3ovai45.execute-api.us-east-2.amazonaws.com/api/upload?ext=' + ext,\n      method: 'put',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    }).then(response => response.data).then(data => {\n      console.log('data===>' + JSON.stringify(data));\n\n      if (data) {\n        setImageFile(data.filename);\n        setImageHeight(\"125px\");\n      }\n\n      setLoading(false);\n    });\n  }\n\n  function setThumbnail(event) {\n    setLoading(true);\n    setImage(URL.createObjectURL(event.target.files[0]));\n    fileUpload(event.target.files[0]);\n  }\n\n  ;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    CategoryService.createCategory({\n      name: categoryName,\n      parent: parent\n    }, res => {\n      setToastClass('success');\n      setToastMessage('Success: ' + res);\n      showToast(true);\n      setCategoryName('');\n      setParent(0);\n      setIsLoading(false);\n    }, err => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Courses\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: categoryList,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    },\n    loading: isLoading // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    } // onPagesChange={(val) => console.log('new pages:', val)}\n    ,\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'parentName': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, item.parent !== 0 && categoryList.find(pCat => pCat.categoryId === item.parent).name),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            deleteCategory(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 113\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + categoryList.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, 'Add Course'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"categoryname-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Category Name\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    label: \"Category Name\",\n    name: \"categoryname-input\",\n    id: \"categoryname-input\",\n    placeholder: \"Please input category name\",\n    autoComplete: \"given-name\",\n    onChange: e => setCategoryName(e.target.value),\n    value: categoryName,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"Parent Category\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"parent\",\n    label: \"Parent Category\",\n    id: \"parent\",\n    onChange: e => setParent(e.target.value),\n    value: parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, \"None\"), categoryList.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    value: category.categoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }, category.name))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 97\n    }\n  }), \" Save\"))))), /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: toast,\n    autoHideDuration: 3000,\n    onClose: () => {\n      showToast(false);\n      getCategoryList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: toastClass,\n    action: /*#__PURE__*/React.createElement(CButton, {\n      onClick: e => {\n        e.preventDefault();\n        showToast(false);\n        getCategoryList();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CIcon, {\n      name: \"cil-x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 106\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, toastMessage)))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Admin/Courses.jsx"],"names":["React","Component","useEffect","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","MuiAlert","Snackbar","CIcon","CategoryService","CourseService","UploadService","Alert","props","Courses","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","categoryList","length","fields","key","_style","width","label","sorter","filter","value","setValue","setCategoryList","courseList","setCourseList","levelList","setLevelList","courseTitle","setCourseTitle","courseDescription","setCourseDescription","level","setLevel","category","setCategory","image","setImage","imageHeight","setImageHeight","toast","showToast","toastMessage","setToastMessage","toastClass","setToastClass","loading","setLoading","imageFile","setImageFile","getCategoryList","levelId","name","res","console","log","err","getCourseList","deleteCourse","courseId","setIsLoading","item","categoryId","handleChange","event","newValue","fileUpload","file","formData","FormData","append","re","ext","exec","axios","url","method","headers","data","then","response","JSON","stringify","filename","setThumbnail","URL","createObjectURL","target","files","handleSubmit","preventDefault","createCategory","categoryName","parent","setCategoryName","setParent","doubleArrows","align","isLoading","val","find","pCat","e","deleteCategory","textAlign","display","map","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect,\r\n} from '@coreui/react';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport CategoryService from '../../API/CategoryService';\r\nimport CourseService from '../../API/CourseService';\r\nimport UploadService from '../../API/UploadService';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} {...props} />;\r\n}\r\n\r\nexport default function Courses() {\r\n  const { useState } = React;\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal = (currentPage) => {\r\n    if (currentPage * currentPagination < categoryList.length)\r\n      return currentPage * currentPagination;\r\n    return categoryList.length;\r\n  }\r\n  const fields = [\r\n    { key: 'Title', _style: { width: '30%' } },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const [categoryList, setCategoryList] = React.useState([]);\r\n  const [courseList, setCourseList] = React.useState([]);\r\n  const [levelList, setLevelList] = React.useState([]);\r\n  const [courseTitle, setCourseTitle] = React.useState('');\r\n  const [courseDescription, setCourseDescription] = React.useState('');\r\n  const [level, setLevel] = React.useState(0);\r\n  const [category, setCategory] = React.useState(0);\r\n  const [image, setImage] = React.useState(null);\r\n  const [imageHeight, setImageHeight] = React.useState('0px');\r\n  const [toast, showToast] = React.useState(false);\r\n  const [toastMessage, setToastMessage] = React.useState('');\r\n  const [toastClass, setToastClass] = React.useState('success');\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageFile, setImageFile] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    getCategoryList();\r\n    setLevelList([{levelId:1, name:'Beginner'},{levelId:2, name:'Intermediate'},{levelId:3, name:'Expert'}]);\r\n  }, []);\r\n\r\n  const getCategoryList = async () => {\r\n    setLoading(true)\r\n    // get categories from backend service via service api\r\n    await CategoryService.getCategoryList('', (res) => {      \r\n      console.log(res)     \r\n      setCategoryList(res); \r\n      setLoading(false)\r\n    }, (err) => {\r\n      setLoading(false)\r\n    });\r\n  };\r\n  \r\n  const getCourseList = async () => {\r\n    setLoading(true)\r\n    // get categories from backend service via service api\r\n    await CourseService.getCourseList('', (res) => {      \r\n      console.log(res)     \r\n      setCourseList(res); \r\n      setLoading(false)\r\n    }, (err) => {\r\n      setLoading(false)\r\n    });\r\n  };\r\n\r\n  function deleteCourse(courseId) {\r\n    setIsLoading(true)\r\n    CourseService.deleteCourse(item.categoryId, (res) => {\r\n      setToastClass('success');\r\n      setToastMessage('Success: ' + res);\r\n      showToast(true);\r\n      setIsLoading(false)\r\n    }, (err) => {\r\n      setIsLoading(false)\r\n    });  \r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  function fileUpload(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    var re = /(?:\\.([^.]+))?$/;\r\n    var ext = re.exec(file.name)[1];\r\n\r\n\r\n    axios({\r\n      url: 'https://hfa3ovai45.execute-api.us-east-2.amazonaws.com/api/upload?ext='+ext,\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      data: formData\r\n    }).then(response => response.data).then((data) => {\r\n      console.log('data===>'+JSON.stringify(data));\r\n      if(data) {\r\n        setImageFile(data.filename);\r\n        setImageHeight(\"125px\");\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function setThumbnail(event) {\r\n    setLoading(true);\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n    fileUpload(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true)\r\n    CategoryService.createCategory(\r\n      {\r\n        name: categoryName,\r\n        parent: parent\r\n      }, (res) => {\r\n        setToastClass('success');\r\n        setToastMessage('Success: ' + res);\r\n        showToast(true);\r\n\r\n        setCategoryName('');\r\n        setParent(0);\r\n        setIsLoading(false)\r\n      }, (err) => {\r\n        setIsLoading(false)\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow>\r\n        <CCol xl=\"6\">\r\n          <CCard custom>\r\n            <CCardHeader >\r\n              Courses\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={categoryList}\r\n                fields={fields}\r\n                // columnFilter\r\n                tableFilter\r\n                // footer\r\n                itemsPerPageSelect\r\n                itemsPerPage={currentPagination}\r\n                dark={false}\r\n                hover={false}\r\n                border={true}\r\n                outlined={true}\r\n                loading={false}\r\n                sorter\r\n                // clickableRows\r\n                pagination={{ doubleArrows: true, align: 'center' }}\r\n                loading={isLoading}\r\n                // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\r\n                onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n                }\r\n                // onPagesChange={(val) => console.log('new pages:', val)}\r\n                onPaginationChange={(val) => {\r\n                  console.log('new pagination:', val);\r\n                  setCurrentPagination(val);\r\n                }}\r\n                // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n                // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n                // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n                // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n                scopedSlots={{\r\n                  'parentName':\r\n                  (item) => (\r\n                    <td>\r\n                      { item.parent !== 0 &&\r\n                          categoryList.find(pCat => pCat.categoryId === item.parent).name\r\n                      }                      \r\n                    </td>\r\n                  ),\r\n                  'actions':\r\n                    item => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                          <CButton color=\"light\"  onClick={(e) => { e.preventDefault(); deleteCategory(item) }}><CIcon name=\"cil-trash\" /></CButton>\r\n                        </td>\r\n                      )\r\n                    }\r\n                }}\r\n              />\r\n              <div style={{ textAlign: 'right' }}>{\r\n                ((currentPage - 1) * currentPagination + 1) + '-' + getLastVal(currentPage) + ' of ' + categoryList.length\r\n              }\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"6\">\r\n          <CCard custom>\r\n            <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex' }}>\r\n              {\r\n                'Add Course'\r\n              }\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\" name='simpleForm'>\r\n                {/* onSubmit={handleSubmit} */}\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"categoryname-input\">Category Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"text\"\r\n                      label=\"Category Name\"\r\n                      name=\"categoryname-input\"\r\n                      id=\"categoryname-input\"\r\n                      placeholder=\"Please input category name\"\r\n                      autoComplete=\"given-name\"\r\n                      onChange={e => setCategoryName(e.target.value)}\r\n                      value={categoryName}\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"parent\">Parent Category</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CSelect \r\n                      custom name=\"parent\" \r\n                      label=\"Parent Category\"\r\n                      id=\"parent\"\r\n                      onChange={e => setParent(e.target.value)}\r\n                      value={parent}\r\n                    >\r\n                    <option value={0}>None</option>\r\n                    {categoryList.map((category) => (\r\n                      <option value={category.categoryId}>{category.name}</option>\r\n                    ))}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <hr />\r\n                <CButton type=\"submit\" variant=\"outline\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>\r\n                {/* <CButton type=\"reset\" variant=\"outline\" className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton> */}\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol sm=\"12\" lg=\"6\">\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={toast}\r\n            autoHideDuration={3000}\r\n            onClose={() => { showToast(false); getCategoryList(); }}>\r\n            <Alert\r\n              severity={toastClass}\r\n              action={\r\n                <CButton  onClick={(e) => { e.preventDefault(); showToast(false); getCategoryList();  }}><CIcon name=\"cil-x\" /></CButton>\r\n              }\r\n            >\r\n              {toastMessage}\r\n            </Alert>\r\n          </Snackbar>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}