{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\LoginPage.js\";\nimport React from \"react\";\nimport { TextField } from '@material-ui/core'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // @material-ui/icons\n\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport CIcon from '@coreui/icons-react';\nimport { NavLink as RouterLink, Route, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify'; // core components\n\nimport GridContainer from \"../../Layout/Grid/GridContainer.js\";\nimport GridItem from \"../../Layout/Grid/GridItem.js\";\nimport CustomInput from \"../../Layout/CustomInput/CustomInput.js\";\nimport Button from \"../../Layout/CustomButtons/Button.js\";\nimport Card from \"../../Layout/Card/Card.js\";\nimport CardBody from \"../../Layout/Card/CardBody.js\";\nimport CardHeader from \"../../Layout/Card/CardHeader.js\";\nimport CardFooter from \"../../Layout/Card/CardFooter.js\";\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function LoginPage() {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  React.useEffect(() => {\n    setConfig();\n  }, []);\n\n  function setConfig() {\n    Amplify.configure({\n      Auth: {\n        identityPoolId: process.env.REACT_APP_AWS_REGION,\n        identityPoolRegion: process.env.REACT_APP_AWS_REGION,\n        region: process.env.REACT_APP_AWS_REGION,\n        userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n      }\n    });\n    const ga = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;\n    if (!ga) createScript();\n  }\n\n  function googleSignIn() {\n    const ga = window.gapi.auth2.getAuthInstance();\n    ga.signIn().then(googleUser => {\n      getAWSCredentials(googleUser);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  async function getAWSCredentials(googleUser) {\n    const {\n      id_token,\n      expires_at\n    } = googleUser.getAuthResponse();\n    const profile = googleUser.getBasicProfile();\n    let user = {\n      email: profile.getEmail(),\n      name: profile.getName()\n    };\n    const credentials = await Auth.federatedSignIn('google', {\n      token: id_token,\n      expires_at\n    }, user);\n    console.log('credentials', credentials);\n    history.push('/modules');\n  }\n\n  function createScript() {\n    // load the Google SDK\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/platform.js';\n    script.async = true;\n    script.onload = initGapi;\n    document.body.appendChild(script);\n  }\n\n  function initGapi() {\n    // init the Google SDK client\n    const g = window.gapi;\n    g.load('auth2', function () {\n      g.auth2.init({\n        client_id: process.env.REACT_APP_AWS_GOOGLE_CLIENT_ID,\n        // authorized scopes\n        scope: 'profile email openid'\n      });\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email + ' ' + password);\n\n    try {\n      const user = await Auth.signIn({\n        username: email,\n        password: password\n      });\n      console.log(user);\n      history.push('/modules');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"signInForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: `${classes.cardHeader} ${classes.textCenter}`,\n    color: \"rose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.socialLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, [/*#__PURE__*/React.createElement(CIcon, {\n    name: \"cib-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cib-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cib-google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  })].map((prop, key) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      color: \"transparent\",\n      justIcon: true,\n      key: key,\n      className: classes.customButtonClass,\n      onClick: key == 2 ? googleSignIn : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, prop);\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Email...\",\n    id: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    required: true,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Password\",\n    id: \"password\",\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(LockOutlined, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, \"lock_outline\")),\n      type: \"password\",\n      autoComplete: \"off\"\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"rose\",\n    simple: true,\n    size: \"lg\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Let\", \"'\", \"s Go\")))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/LoginPage.js"],"names":["React","TextField","makeStyles","InputAdornment","Face","Email","LockOutlined","CIcon","NavLink","RouterLink","Route","useHistory","Amplify","Auth","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","CardFooter","styles","useStyles","LoginPage","cardAnimaton","setCardAnimation","useState","setTimeout","classes","history","email","setEmail","password","setPassword","useEffect","setConfig","configure","identityPoolId","process","env","REACT_APP_AWS_REGION","identityPoolRegion","region","userPoolId","REACT_APP_AWS_USER_POOL_ID","userPoolWebClientId","REACT_APP_AWS_USER_POOL_CLIENT_ID","ga","window","gapi","auth2","getAuthInstance","createScript","googleSignIn","signIn","then","googleUser","getAWSCredentials","error","console","log","id_token","expires_at","getAuthResponse","profile","getBasicProfile","user","getEmail","name","getName","credentials","federatedSignIn","token","push","script","document","createElement","src","async","onload","initGapi","body","appendChild","g","load","init","client_id","REACT_APP_AWS_GOOGLE_CLIENT_ID","scope","handleSubmit","event","preventDefault","username","container","cardHeader","textCenter","cardTitle","socialLine","map","prop","key","customButtonClass","e","target","value","fullWidth","endAdornment","inputAdornmentIcon","type","autoComplete","justifyContentCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TextField } from '@material-ui/core';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n// @material-ui/icons\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport CIcon from '@coreui/icons-react'\n\nimport { NavLink as RouterLink, Route, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify';\n\n\n// core components\nimport GridContainer from \"../../Layout/Grid/GridContainer.js\";\nimport GridItem from \"../../Layout/Grid/GridItem.js\";\nimport CustomInput from \"../../Layout/CustomInput/CustomInput.js\";\nimport Button from \"../../Layout/CustomButtons/Button.js\";\nimport Card from \"../../Layout/Card/Card.js\";\nimport CardBody from \"../../Layout/Card/CardBody.js\";\nimport CardHeader from \"../../Layout/Card/CardHeader.js\";\nimport CardFooter from \"../../Layout/Card/CardFooter.js\";\n\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage() {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  React.useEffect(() => {\n    setConfig();\n  }, []);\n\n  function setConfig() {\n    Amplify.configure({\n      Auth: {\n        identityPoolId: process.env.REACT_APP_AWS_REGION,\n        identityPoolRegion: process.env.REACT_APP_AWS_REGION,\n        region: process.env.REACT_APP_AWS_REGION,\n        userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n      },\n    });\n\n    const ga = window.gapi && window.gapi.auth2 ?\n      window.gapi.auth2.getAuthInstance() :\n        null;\n    if (!ga) createScript();\n  }\n\n  function googleSignIn() {\n    const ga = window.gapi.auth2.getAuthInstance();\n    ga.signIn().then(\n      googleUser => {\n        getAWSCredentials(googleUser);\n    },\n    error => {\n      console.log(error);\n    });\n  }\n\n  async function getAWSCredentials(googleUser) {\n    const { id_token, expires_at } = googleUser.getAuthResponse();\n    const profile = googleUser.getBasicProfile();\n    let user = {\n      email: profile.getEmail(),\n      name: profile.getName()\n    };\n\n    const credentials = await Auth.federatedSignIn(\n      'google',\n      { token: id_token, expires_at },\n        user\n    );\n    console.log('credentials', credentials);\n    history.push('/modules');\n  }\n\n  function createScript() {\n    // load the Google SDK\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/platform.js';\n    script.async = true;\n    script.onload = initGapi;\n    document.body.appendChild(script);\n  }\n\n  function initGapi() {\n    // init the Google SDK client\n    const g = window.gapi;\n    g.load('auth2', function() {\n      g.auth2.init({\n        client_id: process.env.REACT_APP_AWS_GOOGLE_CLIENT_ID,\n        // authorized scopes\n        scope: 'profile email openid'\n      });\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email + ' ' + password)\n    try {\n      const user = await Auth.signIn({\n        username: email,\n        password: password\n      });\n      console.log(user);\n      history.push('/modules');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  \n  return (\n    <div className={classes.container}>\n    \n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={6} md={4}>\n          <form id=\"signInForm\" onSubmit={handleSubmit}>\n            <Card login className={classes[cardAnimaton]}>\n              <CardHeader\n                className={`${classes.cardHeader} ${classes.textCenter}`}\n                color=\"rose\"\n              >\n                <h4 className={classes.cardTitle}>Log in</h4>\n                <div className={classes.socialLine}>\n                  {[\n                    <CIcon name=\"cib-facebook\" />,\n                    <CIcon name=\"cib-twitter\" />,\n                    <CIcon name=\"cib-google\"  />\n                  ].map((prop, key) => {\n                    return (\n                      <Button\n                        color=\"transparent\"\n                        justIcon\n                        key={key}\n                        className={classes.customButtonClass}\n                        onClick={key==2 ? googleSignIn : ''}\n                      >\n                        {prop}\n                      </Button>\n                    );\n                  })}\n                </div>\n              </CardHeader>\n              <CardBody>                \n                <CustomInput\n                  labelText=\"Email...\"\n                  id=\"email\"\n                  onChange={e => setEmail(e.target.value)}\n                  value={email}\n                  required\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Email className={classes.inputAdornmentIcon} />\n                      </InputAdornment>\n                    )\n                  }}\n                  \n                />\n                <CustomInput\n                  labelText=\"Password\"\n                  id=\"password\"\n                  onChange={e => setPassword(e.target.value)}\n                  value={password}\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <LockOutlined className={classes.inputAdornmentIcon}>\n                          lock_outline\n                        </LockOutlined>\n                      </InputAdornment>\n                    ),\n                    type: \"password\",\n                    autoComplete: \"off\",\n                  }}\n                  required\n                />\n              </CardBody>\n              <CardFooter className={classes.justifyContentCenter}>\n                <Button type=\"submit\" color=\"rose\" simple size=\"lg\" block>\n                  Let{\"'\"}s Go\n                </Button>\n              </CardFooter>\n            </Card>\n          </form>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}