{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\Samples\\\\Theme\\\\ReactTheme\\\\trainingapp\\\\web\\\\src\\\\modules\\\\website\\\\ChangePasswordPage.js\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CButton, CCard, CCardBody, CCol, CContainer, CForm, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow, CAlert, CSpinner } from \"@coreui/react\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CIcon from \"@coreui/icons-react\";\nimport { useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from \"aws-amplify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/material/jss/material-dashboard-pro-react/views/registerPageStyle\";\nconst useStyles = makeStyles(styles);\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function ChangePasswordPage() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [code, setCode] = React.useState(\"\");\n  const email = useSelector(state => state.changePasswordUser.email);\n  const [password, setPassword] = React.useState(\"\");\n  const [isHidden, setIsHidden] = React.useState(true);\n  const [isDisabled, setIsDisabled] = React.useState(false);\n  const [toast, showToast] = React.useState(false);\n  const [toastMessage, setToastMessage] = React.useState('');\n  const [toastClass, setToastClass] = React.useState('success');\n  Amplify.configure({\n    Auth: {\n      region: process.env.REACT_APP_AWS_REGION,\n      userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n      userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsDisabled(true);\n    setIsHidden(false);\n    showToast(false);\n\n    try {\n      await Auth.forgotPasswordSubmit(email, code, password);\n      localStorage.setItem(\"passwordStatus\", \"Password changed successfully. Please Login.\");\n      history.push(\"/auth/login-page\");\n    } catch (error) {\n      setIsDisabled(false);\n      setIsHidden(true);\n      setToastClass('error');\n      setToastMessage(error.message);\n      showToast(true);\n    }\n  }\n\n  function validate() {\n    let cPass = document.getElementById(\"confirmPassword\");\n\n    if (password != cPass.value) {\n      cPass.setCustomValidity(\"Passwords Don't Match\");\n    } else {\n      cPass.setCustomValidity(\"\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"9\",\n    lg: \"7\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCardBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    id: \"ChangePasswordForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"#3c4b64\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"email\",\n    value: email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-lock-locked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    placeholder: \"Verification Code\",\n    onChange: e => setCode(e.target.value),\n    value: code,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-lock-locked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"password\",\n    placeholder: \"New Password\",\n    autoComplete: \"new-password\",\n    onChange: e => {\n      setPassword(e.target.value);\n      validate();\n    },\n    required: true,\n    value: password,\n    pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\",\n    onInvalid: e => e.target.setCustomValidity(\"Password must have at least 8 characters, at least 1 number and 1 uppercase and 1 lowercase letter\"),\n    onInput: e => e.target.setCustomValidity(\"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-lock-locked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"password\",\n    id: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    autoComplete: \"new-password\",\n    onChange: validate,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: \"success\",\n    block: true,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSpinner, {\n    grow: true,\n    size: \"sm\",\n    className: \"mfe-1\",\n    hidden: isHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), \"Change Password\"))))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: toast,\n    autoHideDuration: 3000,\n    onClose: () => {\n      showToast(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: toastClass,\n    action: /*#__PURE__*/React.createElement(CButton, {\n      onClick: e => {\n        e.preventDefault();\n        showToast(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CIcon, {\n      name: \"cil-x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 83\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, toastMessage)));\n}","map":{"version":3,"sources":["D:/CSH/Samples/Theme/ReactTheme/trainingapp/web/src/modules/website/ChangePasswordPage.js"],"names":["React","useSelector","CButton","CCard","CCardBody","CCol","CContainer","CForm","CInput","CInputGroup","CInputGroupPrepend","CInputGroupText","CRow","CAlert","CSpinner","MuiAlert","Snackbar","CIcon","useHistory","Amplify","Auth","makeStyles","styles","useStyles","Alert","props","ChangePasswordPage","classes","history","code","setCode","useState","email","state","changePasswordUser","password","setPassword","isHidden","setIsHidden","isDisabled","setIsDisabled","toast","showToast","toastMessage","setToastMessage","toastClass","setToastClass","configure","region","process","env","REACT_APP_AWS_REGION","userPoolId","REACT_APP_AWS_USER_POOL_ID","userPoolWebClientId","REACT_APP_AWS_USER_POOL_CLIENT_ID","handleSubmit","event","preventDefault","forgotPasswordSubmit","localStorage","setItem","push","error","message","validate","cPass","document","getElementById","value","setCustomValidity","container","color","e","target","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CAlert,\r\n  CSpinner\r\n} from \"@coreui/react\";\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Amplify, { Auth } from \"aws-amplify\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"../../assets/material/jss/material-dashboard-pro-react/views/registerPageStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} {...props} />;\r\n}\r\n\r\nexport default function ChangePasswordPage() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [code, setCode] = React.useState(\"\");\r\n  const email = useSelector(state => state.changePasswordUser.email);\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [isHidden, setIsHidden] = React.useState(true);\r\n  const [isDisabled, setIsDisabled] = React.useState(false);\r\n  const [toast, showToast] = React.useState(false);\r\n  const [toastMessage, setToastMessage] = React.useState('');\r\n  const [toastClass, setToastClass] = React.useState('success');\r\n\r\n  Amplify.configure({\r\n    Auth: {\r\n      region: process.env.REACT_APP_AWS_REGION,\r\n      userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\r\n      userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\r\n    }\r\n  });\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsDisabled(true);\r\n    setIsHidden(false);\r\n    showToast(false);\r\n    try {\r\n      await Auth.forgotPasswordSubmit(email, code, password);\r\n      localStorage.setItem(\r\n        \"passwordStatus\",\r\n        \"Password changed successfully. Please Login.\"\r\n      );\r\n      history.push(\"/auth/login-page\");\r\n    } catch (error) {\r\n      setIsDisabled(false);\r\n      setIsHidden(true);\r\n      setToastClass('error');\r\n      setToastMessage(error.message);\r\n      showToast(true);\r\n    }\r\n  }\r\n\r\n  function validate() {\r\n    let cPass = document.getElementById(\"confirmPassword\");\r\n    if (password != cPass.value) {\r\n      cPass.setCustomValidity(\"Passwords Don't Match\");\r\n    } else {\r\n      cPass.setCustomValidity(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n            <CCard className=\"mx-4\">\r\n              <CCardBody className=\"p-4\">\r\n                <CForm id=\"ChangePasswordForm\" onSubmit={handleSubmit}>\r\n                  <h1 style={{ color: \"#3c4b64\" }}>Reset Password</h1>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>@</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput type=\"email\" value={email} disabled />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      placeholder=\"Verification Code\"\r\n                      onChange={e => setCode(e.target.value)}\r\n                      value={code}\r\n                      required\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"password\"\r\n                      placeholder=\"New Password\"\r\n                      autoComplete=\"new-password\"\r\n                      onChange={e => {\r\n                        setPassword(e.target.value);\r\n                        validate();\r\n                      }}\r\n                      required\r\n                      value={password}\r\n                      pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                      onInvalid={e =>\r\n                        e.target.setCustomValidity(\r\n                          \"Password must have at least 8 characters, at least 1 number and 1 uppercase and 1 lowercase letter\"\r\n                        )\r\n                      }\r\n                      onInput={e => e.target.setCustomValidity(\"\")}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput\r\n                      type=\"password\"\r\n                      id=\"confirmPassword\"\r\n                      placeholder=\"Confirm Password\"\r\n                      autoComplete=\"new-password\"\r\n                      onChange={validate}\r\n                      required\r\n                    />\r\n                  </CInputGroup>\r\n                  <CButton type=\"submit\" color=\"success\" block disabled={isDisabled}>\r\n                    <CSpinner grow size=\"sm\" className=\"mfe-1\" hidden={isHidden} />\r\n                    Change Password\r\n                  </CButton>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={toast}\r\n        autoHideDuration={3000}\r\n        onClose={() => { showToast(false); }}>\r\n        <Alert\r\n          severity={toastClass}\r\n          action={\r\n            <CButton  onClick={(e) => { e.preventDefault();  showToast(false); }}><CIcon name=\"cil-x\" /></CButton>\r\n          }\r\n        >\r\n          {toastMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}