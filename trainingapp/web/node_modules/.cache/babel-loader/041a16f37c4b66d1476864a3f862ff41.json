{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\CheckoutForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, Elements, useElements, useStripe, PaymentRequestButtonElement, CardElement } from \"@stripe/react-stripe-js\";\nimport { logEvent, Result, ErrorResult } from './util'; // import './styles/2-Card-Detailed.css';\n\nimport StripeCheckout from 'react-stripe-checkout';\nexport default function CheckoutForm() {\n  function onToken(token) {// fetch('/save-stripe-token', {\n    //   method: 'POST',\n    //   body: JSON.stringify(token),\n    // }).then(response => {\n    //   response.json().then(data => {\n    //     alert(`We are in business, ${data.email}`);\n    //   });\n    // });\n  }\n\n  function onOpened() {}\n\n  function onClosed() {} // ...\n\n\n  return (\n    /*#__PURE__*/\n    // ...\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(StripeCheckout, {\n      token: onToken,\n      stripeKey: \"pk_test_51HoJ7lEW8ELLg74EpUwGfDBHRE818ndk53WS4MP1OfHKGcUhppaQjdrxZJ0SHQ33hxJAi7sPNIJkhqoPJF6940Fr00txoaVRxn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(StripeCheckout, {\n      name: \"Three Comma Co.\" // the pop-in header title\n      ,\n      description: \"Big Data Stuff\" // the pop-in header subtitle\n      ,\n      image: \"https://stripe.com/img/documentation/checkout/marketplace.png\" // the pop-in header image (default none)\n      ,\n      ComponentClass: \"div\",\n      label: \"Buy the Thing\" // text inside the Stripe button\n      ,\n      panelLabel: \"Give Money\" // prepended to the amount in the bottom pay button\n      ,\n      amount: 1000000 // cents\n      ,\n      currency: \"USD\",\n      stripeKey: \"pk_test_51HoJ7lEW8ELLg74EpUwGfDBHRE818ndk53WS4MP1OfHKGcUhppaQjdrxZJ0SHQ33hxJAi7sPNIJkhqoPJF6940Fr00txoaVRxn\",\n      locale: \"zh\",\n      email: \"info@vidhub.co\" // Note: Enabling either address option will give the user the ability to\n      // fill out both. Addresses are sent as a second parameter in the token callback.\n      ,\n      shippingAddress: true,\n      billingAddress: false // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      ,\n      zipCode: false,\n      alipay: true // accept Alipay (default false)\n      ,\n      bitcoin: true // accept Bitcoins (default false)\n      ,\n      allowRememberMe: true // \"Remember Me\" option (default true)\n      ,\n      token: onToken // submit callback\n      ,\n      opened: onOpened // called when the checkout popin is opened (no IE6/7)\n      ,\n      closed: onClosed // called when the checkout popin is closed (no IE6/7)\n      // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n      // you are using multiple stripe keys\n      ,\n      reconfigureOnUpdate: false // Note: you can change the event to `onTouchTap`, `onClick`, `onTouchStart`\n      // useful if you're using React-Tap-Event-Plugin\n      ,\n      triggerEvent: \"onTouchTap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/CheckoutForm.js"],"names":["React","useEffect","useState","CardNumberElement","CardCvcElement","CardExpiryElement","Elements","useElements","useStripe","PaymentRequestButtonElement","CardElement","logEvent","Result","ErrorResult","StripeCheckout","CheckoutForm","onToken","token","onOpened","onClosed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,iBADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,2BAPF,EAQEC,WARF,QASO,yBATP;AAWA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,WAA1B,QAA4C,QAA5C,C,CACA;;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAGA,eAAe,SAASC,YAAT,GAAwB;AACrC,WAASC,OAAT,CAAiBC,KAAjB,EACA,CACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,WAASC,QAAT,GACA,CAEC;;AAED,WAASC,QAAT,GACA,CAEC,CApBoC,CAqBrC;;;AAEA;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AACE,MAAA,KAAK,EAAEH,OADT;AAEE,MAAA,SAAS,EAAC,6GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAMA,oBAAC,cAAD;AACE,MAAA,IAAI,EAAC,iBADP,CACyB;AADzB;AAEE,MAAA,WAAW,EAAC,gBAFd,CAE+B;AAF/B;AAGE,MAAA,KAAK,EAAC,+DAHR,CAGwE;AAHxE;AAIE,MAAA,cAAc,EAAC,KAJjB;AAKE,MAAA,KAAK,EAAC,eALR,CAKwB;AALxB;AAME,MAAA,UAAU,EAAC,YANb,CAM0B;AAN1B;AAOE,MAAA,MAAM,EAAE,OAPV,CAOmB;AAPnB;AAQE,MAAA,QAAQ,EAAC,KARX;AASE,MAAA,SAAS,EAAC,6GATZ;AAUE,MAAA,MAAM,EAAC,IAVT;AAWE,MAAA,KAAK,EAAC,gBAXR,CAYE;AACA;AAbF;AAcE,MAAA,eAAe,MAdjB;AAeE,MAAA,cAAc,EAAE,KAflB,CAgBE;AACA;AAjBF;AAkBE,MAAA,OAAO,EAAE,KAlBX;AAmBE,MAAA,MAAM,MAnBR,CAmBS;AAnBT;AAoBE,MAAA,OAAO,MApBT,CAoBU;AApBV;AAqBE,MAAA,eAAe,MArBjB,CAqBkB;AArBlB;AAsBE,MAAA,KAAK,EAAEA,OAtBT,CAsBkB;AAtBlB;AAuBE,MAAA,MAAM,EAAEE,QAvBV,CAuBoB;AAvBpB;AAwBE,MAAA,MAAM,EAAEC,QAxBV,CAwBoB;AAClB;AACA;AA1BF;AA2BE,MAAA,mBAAmB,EAAE,KA3BvB,CA4BE;AACA;AA7BF;AA8BE,MAAA,YAAY,EAAC,YA9Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA;AAFF;AAgDD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { \r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe ,\r\n  PaymentRequestButtonElement,\r\n  CardElement\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport {logEvent, Result, ErrorResult} from './util';\r\n// import './styles/2-Card-Detailed.css';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\n\r\nexport default function CheckoutForm() {\r\n  function onToken(token) \r\n  {\r\n    // fetch('/save-stripe-token', {\r\n    //   method: 'POST',\r\n    //   body: JSON.stringify(token),\r\n    // }).then(response => {\r\n    //   response.json().then(data => {\r\n    //     alert(`We are in business, ${data.email}`);\r\n    //   });\r\n    // });\r\n  }\r\n  function onOpened()\r\n  {\r\n\r\n  }\r\n  \r\n  function onClosed()\r\n  {\r\n    \r\n  }\r\n  // ...\r\n\r\n  return (\r\n    // ...\r\n    <div>\r\n    <StripeCheckout\r\n      token={onToken}\r\n      stripeKey=\"pk_test_51HoJ7lEW8ELLg74EpUwGfDBHRE818ndk53WS4MP1OfHKGcUhppaQjdrxZJ0SHQ33hxJAi7sPNIJkhqoPJF6940Fr00txoaVRxn\"\r\n    />\r\n\r\n    <StripeCheckout\r\n      name=\"Three Comma Co.\" // the pop-in header title\r\n      description=\"Big Data Stuff\" // the pop-in header subtitle\r\n      image=\"https://stripe.com/img/documentation/checkout/marketplace.png\" // the pop-in header image (default none)\r\n      ComponentClass=\"div\"\r\n      label=\"Buy the Thing\" // text inside the Stripe button\r\n      panelLabel=\"Give Money\" // prepended to the amount in the bottom pay button\r\n      amount={1000000} // cents\r\n      currency=\"USD\"\r\n      stripeKey=\"pk_test_51HoJ7lEW8ELLg74EpUwGfDBHRE818ndk53WS4MP1OfHKGcUhppaQjdrxZJ0SHQ33hxJAi7sPNIJkhqoPJF6940Fr00txoaVRxn\"\r\n      locale=\"zh\"\r\n      email=\"info@vidhub.co\"\r\n      // Note: Enabling either address option will give the user the ability to\r\n      // fill out both. Addresses are sent as a second parameter in the token callback.\r\n      shippingAddress\r\n      billingAddress={false}\r\n      // Note: enabling both zipCode checks and billing or shipping address will\r\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\r\n      zipCode={false}\r\n      alipay // accept Alipay (default false)\r\n      bitcoin // accept Bitcoins (default false)\r\n      allowRememberMe // \"Remember Me\" option (default true)\r\n      token={onToken} // submit callback\r\n      opened={onOpened} // called when the checkout popin is opened (no IE6/7)\r\n      closed={onClosed} // called when the checkout popin is closed (no IE6/7)\r\n      // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\r\n      // you are using multiple stripe keys\r\n      reconfigureOnUpdate={false}\r\n      // Note: you can change the event to `onTouchTap`, `onClick`, `onTouchStart`\r\n      // useful if you're using React-Tap-Event-Plugin\r\n      triggerEvent=\"onTouchTap\"\r\n      >\r\n      {/* <button className=\"btn btn-primary\">\r\n        Use your own child component, which gets wrapped in whatever\r\n        component you pass into as \"ComponentClass\" (defaults to span)\r\n      </button> */}\r\n    </StripeCheckout>\r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}