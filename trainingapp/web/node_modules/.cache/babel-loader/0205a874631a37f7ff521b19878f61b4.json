{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\CheckoutForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { logEvent, Result, ErrorResult } from './util';\nimport 'styles/common.css';\nconst ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      fontSize: '18px',\n      color: '#424770',\n      letterSpacing: '0.025em',\n      '::placeholder': {\n        color: '#aab7c4'\n      }\n    },\n    invalid: {\n      color: '#9e2146'\n    }\n  }\n};\nexport default function CheckoutForm() {\n  const elements = useElements();\n  const stripe = useStripe();\n  const [name, setName] = useState('');\n  const [postal, setPostal] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const cardElement = elements.getElement(CardNumberElement);\n    const payload = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n      billing_details: {\n        name,\n        address: {\n          postal_code: postal\n        }\n      }\n    });\n\n    if (payload.error) {\n      console.log('[error]', payload.error);\n      setErrorMessage(payload.error.message);\n      setPaymentMethod(null);\n    } else {\n      console.log('[PaymentMethod]', payload.paymentMethod);\n      setPaymentMethod(payload.paymentMethod);\n      setErrorMessage(null);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    required: true,\n    placeholder: \"Jenny Rosen\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cardNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Card Number\"), /*#__PURE__*/React.createElement(CardNumberElement, {\n    id: \"cardNumber\",\n    onBlur: logEvent('blur'),\n    onChange: logEvent('change'),\n    onFocus: logEvent('focus'),\n    onReady: logEvent('ready'),\n    options: ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"expiry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Card Expiration\"), /*#__PURE__*/React.createElement(CardExpiryElement, {\n    id: \"expiry\",\n    onBlur: logEvent('blur'),\n    onChange: logEvent('change'),\n    onFocus: logEvent('focus'),\n    onReady: logEvent('ready'),\n    options: ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cvc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"CVC\"), /*#__PURE__*/React.createElement(CardCvcElement, {\n    id: \"cvc\",\n    onBlur: logEvent('blur'),\n    onChange: logEvent('change'),\n    onFocus: logEvent('focus'),\n    onReady: logEvent('ready'),\n    options: ELEMENT_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"postal\",\n    required: true,\n    placeholder: \"12345\",\n    value: postal,\n    onChange: e => {\n      setPostal(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(ErrorResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 24\n    }\n  }, errorMessage), paymentMethod && /*#__PURE__*/React.createElement(Result, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Got PaymentMethod: \", paymentMethod.id), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/CheckoutForm.js"],"names":["React","useEffect","useState","CardNumberElement","CardCvcElement","CardExpiryElement","Elements","useElements","useStripe","logEvent","Result","ErrorResult","ELEMENT_OPTIONS","style","base","fontSize","color","letterSpacing","invalid","CheckoutForm","elements","stripe","name","setName","postal","setPostal","errorMessage","setErrorMessage","paymentMethod","setPaymentMethod","handleSubmit","event","preventDefault","cardElement","getElement","payload","createPaymentMethod","type","card","billing_details","address","postal_code","error","console","log","message","e","target","value","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,iBADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,SANF,QAOO,yBAPP;AASA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,WAA1B,QAA4C,QAA5C;AACA,OAAO,mBAAP;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,KAAK,EAAE,SAFH;AAGJC,MAAAA,aAAa,EAAE,SAHX;AAIJ,uBAAiB;AACfD,QAAAA,KAAK,EAAE;AADQ;AAJb,KADD;AASLE,IAAAA,OAAO,EAAE;AACPF,MAAAA,KAAK,EAAE;AADA;AATJ;AADe,CAAxB;AAgBA,eAAe,SAASG,YAAT,GAAwB;AACrC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAM4B,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACX,MAAD,IAAW,CAACD,QAAhB,EAA0B;AACxB;AACA;AACA;AACD;;AAED,UAAMa,WAAW,GAAGb,QAAQ,CAACc,UAAT,CAAoB/B,iBAApB,CAApB;AAEA,UAAMgC,OAAO,GAAG,MAAMd,MAAM,CAACe,mBAAP,CAA2B;AAC/CC,MAAAA,IAAI,EAAE,MADyC;AAE/CC,MAAAA,IAAI,EAAEL,WAFyC;AAG/CM,MAAAA,eAAe,EAAE;AACfjB,QAAAA,IADe;AAEfkB,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEjB;AADN;AAFM;AAH8B,KAA3B,CAAtB;;AAWA,QAAIW,OAAO,CAACO,KAAZ,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAO,CAACO,KAA/B;AACAf,MAAAA,eAAe,CAACQ,OAAO,CAACO,KAAR,CAAcG,OAAf,CAAf;AACAhB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAJD,MAIO;AACLc,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,OAAO,CAACP,aAAvC;AACAC,MAAAA,gBAAgB,CAACM,OAAO,CAACP,aAAT,CAAhB;AACAD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GA/BD;;AAiCA,sBACE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,KAAK,EAAER,IAJT;AAKE,IAAA,QAAQ,EAAGwB,CAAD,IAAO;AACfvB,MAAAA,OAAO,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,eAYE,oBAAC,iBAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,MAAM,EAAEvC,QAAQ,CAAC,MAAD,CAFlB;AAGE,IAAA,QAAQ,EAAEA,QAAQ,CAAC,QAAD,CAHpB;AAIE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CAJnB;AAKE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CALnB;AAME,IAAA,OAAO,EAAEG,eANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAoBE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBF,eAqBE,oBAAC,iBAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,MAAM,EAAEH,QAAQ,CAAC,MAAD,CAFlB;AAGE,IAAA,QAAQ,EAAEA,QAAQ,CAAC,QAAD,CAHpB;AAIE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CAJnB;AAKE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CALnB;AAME,IAAA,OAAO,EAAEG,eANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eA6BE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA7BF,eA8BE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,MAAM,EAAEH,QAAQ,CAAC,MAAD,CAFlB;AAGE,IAAA,QAAQ,EAAEA,QAAQ,CAAC,QAAD,CAHpB;AAIE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CAJnB;AAKE,IAAA,OAAO,EAAEA,QAAQ,CAAC,OAAD,CALnB;AAME,IAAA,OAAO,EAAEG,eANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,eAsCE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtCF,eAuCE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEY,MAJT;AAKE,IAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfrB,MAAAA,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EAgDGtB,YAAY,iBAAI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,YAAd,CAhDnB,EAiDGE,aAAa,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4BA,aAAa,CAACqB,EAA1C,CAjDpB,eAkDE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAAC5B,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlDF,CADF;AAwDD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { \r\n  CardNumberElement,\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe \r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport {logEvent, Result, ErrorResult} from './util';\r\nimport 'styles/common.css';\r\n\r\nconst ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      fontSize: '18px',\r\n      color: '#424770',\r\n      letterSpacing: '0.025em',\r\n      '::placeholder': {\r\n        color: '#aab7c4',\r\n      },\r\n    },\r\n    invalid: {\r\n      color: '#9e2146',\r\n    },\r\n  },\r\n};\r\n\r\nexport default function CheckoutForm() {\r\n  const elements = useElements();\r\n  const stripe = useStripe();\r\n  const [name, setName] = useState('');\r\n  const [postal, setPostal] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardNumberElement);\r\n\r\n    const payload = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n      billing_details: {\r\n        name,\r\n        address: {\r\n          postal_code: postal,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      console.log('[error]', payload.error);\r\n      setErrorMessage(payload.error.message);\r\n      setPaymentMethod(null);\r\n    } else {\r\n      console.log('[PaymentMethod]', payload.paymentMethod);\r\n      setPaymentMethod(payload.paymentMethod);\r\n      setErrorMessage(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Full Name</label>\r\n      <input\r\n        id=\"name\"\r\n        required\r\n        placeholder=\"Jenny Rosen\"\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n      />\r\n      <label htmlFor=\"cardNumber\">Card Number</label>\r\n      <CardNumberElement\r\n        id=\"cardNumber\"\r\n        onBlur={logEvent('blur')}\r\n        onChange={logEvent('change')}\r\n        onFocus={logEvent('focus')}\r\n        onReady={logEvent('ready')}\r\n        options={ELEMENT_OPTIONS}\r\n      />\r\n      <label htmlFor=\"expiry\">Card Expiration</label>\r\n      <CardExpiryElement\r\n        id=\"expiry\"\r\n        onBlur={logEvent('blur')}\r\n        onChange={logEvent('change')}\r\n        onFocus={logEvent('focus')}\r\n        onReady={logEvent('ready')}\r\n        options={ELEMENT_OPTIONS}\r\n      />\r\n      <label htmlFor=\"cvc\">CVC</label>\r\n      <CardCvcElement\r\n        id=\"cvc\"\r\n        onBlur={logEvent('blur')}\r\n        onChange={logEvent('change')}\r\n        onFocus={logEvent('focus')}\r\n        onReady={logEvent('ready')}\r\n        options={ELEMENT_OPTIONS}\r\n      />\r\n      <label htmlFor=\"postal\">Postal Code</label>\r\n      <input\r\n        id=\"postal\"\r\n        required\r\n        placeholder=\"12345\"\r\n        value={postal}\r\n        onChange={(e) => {\r\n          setPostal(e.target.value);\r\n        }}\r\n      />\r\n      {errorMessage && <ErrorResult>{errorMessage}</ErrorResult>}\r\n      {paymentMethod && <Result>Got PaymentMethod: {paymentMethod.id}</Result>}\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}