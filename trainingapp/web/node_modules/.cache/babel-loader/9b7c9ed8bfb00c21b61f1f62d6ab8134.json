{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Devicemanagement\\\\Sensors.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport devicesData from './DevicesData.js';\nimport _sensorsData from './SensorsData.js';\nexport default function Sensors({\n  match\n}) {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < sensorsData.length) return currentPage * currentPagination;\n    return sensorsData.length;\n  };\n\n  const fields = [{\n    key: 'SensorType',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'HighThreshold',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'LowThreshold',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '15%'\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [sensorsData, setSensorsData] = useState([]);\n  useEffect(() => {\n    setSensorsData(_sensorsData.map(a => ({ ...a\n    })));\n  }, []);\n  const [isAddSensor, setIsAddSensor] = useState(true);\n  const [editId, setEditId] = useState(-1);\n\n  const removeSensor = item => {\n    handleReset();\n    const sensor = sensorsData.find(sensor => sensor.id === item.id); //console.log(item.id)\n    //console.log(device)    \n\n    var index = sensorsData.indexOf(sensor);\n\n    if (index !== -1) {\n      sensorsData.splice(index, 1);\n    }\n\n    console.log(sensorsData.length);\n    setSensorsData(sensorsData.map(a => ({ ...a\n    })));\n  };\n\n  const editSensor = item => {\n    document.getElementById('sensortype-input').value = item.SensorType;\n    document.getElementById('highthreshold-input').value = item.HighThreshold;\n    document.getElementById('lowthreshold-input').value = item.LowThreshold;\n    setIsAddSensor(false);\n    setEditId(item.id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // alert(JSON.stringify(document.getElementById('sensortype-input').value, null, 2))\n\n    const sensor = sensorsData.find(sensor => sensor.id === editId);\n    var index = sensorsData.indexOf(sensor);\n    const sensortype = document.getElementById('sensortype-input').value;\n    const highthreshold = document.getElementById('highthreshold-input').value;\n    const lowthreshold = document.getElementById('lowthreshold-input').value;\n\n    if (index !== -1) {\n      sensorsData[index].SensorType = sensortype;\n      sensorsData[index].HighThreshold = highthreshold;\n      sensorsData[index].LowThreshold = lowthreshold;\n    } else {\n      sensorsData.push({\n        id: sensorsData.length,\n        SensorType: sensortype,\n        HighThreshold: highthreshold,\n        LowThreshold: lowthreshold\n      });\n    }\n\n    setSensorsData(sensorsData.map(a => ({ ...a\n    })));\n    handleReset(); // console.log('Device has been successfully saved!', sensorsData)\n  };\n\n  const handleReset = () => {\n    document.getElementById('sensortype-input').value = '';\n    document.getElementById('highthreshold-input').value = '';\n    document.getElementById('lowthreshold-input').value = '';\n    setIsAddSensor(true);\n    setEditId(-1);\n  };\n\n  const device = devicesData.find(device => device.id.toString() === match.params.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Sensor List \"), \" \", '( imei: ' + device.IMEI + ', device type: ' + device.DeviceType + ' )'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: sensorsData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: false,\n    outlined: false,\n    loading: false,\n    sorter: false // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    } // onPagesChange={(val) => console.log('new pages:', val)}\n    ,\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, editId != item.id ? /*#__PURE__*/React.createElement(CButton, {\n          size: \"sm\",\n          color: \"info\",\n          onClick: e => {\n            e.preventDefault();\n            editSensor(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }\n        }, \"Edit\") : /*#__PURE__*/React.createElement(CButton, {\n          size: \"sm\",\n          color: \"info\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CButton, {\n          size: \"sm\",\n          color: \"danger\",\n          className: \"ml-1\",\n          onClick: e => {\n            e.preventDefault();\n            removeSensor(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 27\n          }\n        }, \"Delete\"));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + sensorsData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, isAddSensor ? 'Add Sensor' : 'Edit Sensor'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"sensortype-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Sensor Type\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"sensortype-input\",\n    id: \"sensortype-input\",\n    placeholder: \"Please input sensor type\",\n    autoComplete: \"given-name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    placeholder: \"Email\",\n    autoComplete: \"email\",\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"highthreshold-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"HighThreshold\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"highthreshold-input\",\n    id: \"highthreshold-input\",\n    placeholder: \"Please input highthreshold\",\n    autoComplete: \"given-name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"lowthreshold-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"LowThreshold\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"lowthreshold-input\",\n    id: \"lowthreshold-input\",\n    placeholder: \"Please input lowthreshold\",\n    autoComplete: \"given-name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 83\n    }\n  }), \" Save\")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"reset\",\n    className: \"mr-1\",\n    color: \"danger\",\n    onClick: handleReset,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-ban\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 104\n    }\n  }), \" Reset\")))))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Devicemanagement/Sensors.jsx"],"names":["React","Component","useEffect","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CIcon","devicesData","_sensorsData","Sensors","match","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","sensorsData","length","fields","key","_style","width","label","sorter","filter","setSensorsData","map","a","isAddSensor","setIsAddSensor","editId","setEditId","removeSensor","item","handleReset","sensor","find","id","index","indexOf","splice","console","log","editSensor","document","getElementById","value","SensorType","HighThreshold","LowThreshold","handleSubmit","event","preventDefault","sensortype","highthreshold","lowthreshold","push","device","toString","params","IMEI","DeviceType","doubleArrows","align","val","e","textAlign","display","setEmail","target","email"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport devicesData from './DevicesData.js'\r\nimport _sensorsData from './SensorsData.js'\r\n\r\nexport default function Sensors({match}) {\r\n  const { useState } = React;\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal = (currentPage) => {\r\n    if (currentPage * currentPagination < sensorsData.length)\r\n      return currentPage * currentPagination;\r\n    return sensorsData.length;\r\n  }\r\n  const fields = [\r\n    { key: 'SensorType', _style: { width: '20%' } },\r\n    { key: 'HighThreshold', _style: { width: '20%' } },\r\n    { key: 'LowThreshold', _style: { width: '20%' } },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '15%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n\r\n  const [sensorsData, setSensorsData]  = useState([])\r\n  useEffect(() => {\r\n    setSensorsData(_sensorsData.map(a => ({...a})))\r\n  }, [])\r\n  const [isAddSensor, setIsAddSensor] = useState(true)\r\n  const [editId, setEditId] = useState(-1)\r\n\r\n  const removeSensor = (item) => {\r\n    handleReset()\r\n    const sensor = sensorsData.find(sensor => sensor.id === item.id)\r\n    //console.log(item.id)\r\n    //console.log(device)    \r\n    var index = sensorsData.indexOf(sensor)\r\n    if (index !== -1) {\r\n      sensorsData.splice(index, 1);\r\n    }\r\n    console.log(sensorsData.length);\r\n\r\n    setSensorsData(sensorsData.map(a => ({...a})))\r\n  }\r\n\r\n  const editSensor = (item) => {\r\n    document.getElementById('sensortype-input').value = item.SensorType;\r\n    document.getElementById('highthreshold-input').value = item.HighThreshold;\r\n    document.getElementById('lowthreshold-input').value = item.LowThreshold;\r\n    setIsAddSensor(false)\r\n    setEditId(item.id)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // alert(JSON.stringify(document.getElementById('sensortype-input').value, null, 2))\r\n\r\n    const sensor = sensorsData.find(sensor => sensor.id === editId)\r\n    var index = sensorsData.indexOf(sensor)\r\n    const sensortype = document.getElementById('sensortype-input').value\r\n    const highthreshold =  document.getElementById('highthreshold-input').value\r\n    const lowthreshold =  document.getElementById('lowthreshold-input').value\r\n\r\n    if (index !== -1) {\r\n      sensorsData[index].SensorType = sensortype       \r\n      sensorsData[index].HighThreshold = highthreshold        \r\n      sensorsData[index].LowThreshold = lowthreshold        \r\n    } else {\r\n      sensorsData.push({id:(sensorsData.length),SensorType:sensortype, HighThreshold:highthreshold, LowThreshold:lowthreshold })\r\n    }\r\n    setSensorsData(sensorsData.map(a => ({...a})))    \r\n    handleReset()\r\n    // console.log('Device has been successfully saved!', sensorsData)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('sensortype-input').value = ''\r\n    document.getElementById('highthreshold-input').value = ''\r\n    document.getElementById('lowthreshold-input').value = ''\r\n    setIsAddSensor(true)\r\n    setEditId(-1)\r\n  }\r\n\r\n  const device = devicesData.find( device => device.id.toString() === match.params.id)\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow>\r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >\r\n              <h5 >Sensor List </h5> {'( imei: '+device.IMEI+', device type: '+device.DeviceType+' )'}\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={sensorsData}\r\n                fields={fields}\r\n                // columnFilter\r\n                tableFilter\r\n                // footer\r\n                itemsPerPageSelect\r\n                itemsPerPage={currentPagination}\r\n                dark={false}\r\n                hover={false}\r\n                border={false}\r\n                outlined={false}\r\n                loading={false}\r\n                sorter={false}\r\n                // clickableRows\r\n                pagination={{ doubleArrows: true, align: 'center' }}\r\n                // loading\r\n                // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\r\n                onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n                }\r\n                // onPagesChange={(val) => console.log('new pages:', val)}\r\n                onPaginationChange={(val) => {\r\n                  console.log('new pagination:', val);\r\n                  setCurrentPagination(val);\r\n                }}\r\n                // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n                // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n                // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n                // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n                scopedSlots={{\r\n                  'actions':\r\n                    item => {\r\n                      return (\r\n                        <td className=\"py-2\">                          \r\n                          {\r\n                           editId != item.id ?\r\n                              <CButton size=\"sm\" color=\"info\" onClick={(e) => { e.preventDefault(); editSensor(item) }}>Edit</CButton>\r\n                              : <CButton size=\"sm\" color=\"info\" disabled>Edit</CButton>\r\n                          }\r\n                          <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={(e) => { e.preventDefault(); removeSensor(item) }}>\r\n                            Delete\r\n                          </CButton>\r\n                        </td>\r\n                      )\r\n                    }\r\n                }}\r\n              />\r\n              <div style={{ textAlign: 'right' }}>{\r\n                ((currentPage - 1) * currentPagination + 1) + '-' + getLastVal(currentPage) + ' of ' + sensorsData.length\r\n              }\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n          <CCard custom>\r\n            <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex' }}>\r\n              {\r\n                isAddSensor ? 'Add Sensor' : 'Edit Sensor'\r\n              }\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\" name='simpleForm'>\r\n                {/* onSubmit={handleSubmit} */}\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"sensortype-input\">Sensor Type</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"text\"\r\n                      name=\"sensortype-input\"\r\n                      id=\"sensortype-input\"\r\n                      placeholder=\"Please input sensor type\"\r\n                      autoComplete=\"given-name\"\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CInputGroup className=\"mb-3\">\r\n                  <CInputGroupPrepend>\r\n                    <CInputGroupText>\r\n                      @\r\n                      {/* <CIcon name=\"cil-envelope-closed\" /> */}\r\n                    </CInputGroupText>\r\n                  </CInputGroupPrepend>\r\n                  <CInput type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    autoComplete=\"email\" \r\n                    type = \"email\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    value={email} \r\n                    required/>\r\n                </CInputGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"highthreshold-input\">HighThreshold</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"number\"\r\n                      name=\"highthreshold-input\"\r\n                      id=\"highthreshold-input\"\r\n                      placeholder=\"Please input highthreshold\"\r\n                      autoComplete=\"given-name\"\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"lowthreshold-input\">LowThreshold</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"number\"\r\n                      name=\"lowthreshold-input\"\r\n                      id=\"lowthreshold-input\"\r\n                      placeholder=\"Please input lowthreshold\"\r\n                      autoComplete=\"given-name\"\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>                \r\n                <hr />\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CButton type=\"submit\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>\r\n                  </CCol>\r\n                  <CCol md=\"4\">\r\n                    <CButton type=\"reset\"  className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}