{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Devicemanagement\\\\Devices.jsx\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect, CCardFooter, CInvalidFeedback } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport devicesData from './DevicesData.js';\n\nconst handleSubmit = event => {\n  setTimeout(() => {// alert(JSON.stringify(values, null, 2))\n    // console.log('User has been successfully saved!', values)\n    // setSubmitting(false)\n  }, 2000);\n};\n\nconst handleReset = () => {};\n\nexport default function Devices() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < devicesData.length) return currentPage * currentPagination;\n    return devicesData.length;\n  };\n\n  const fields = [{\n    key: 'IMEI',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'DeviceType',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n\n  const removeDevice = item => {\n    const device = devicesData.find(device => device.id === item.id); //console.log(item.id)\n    //console.log(device)    \n\n    var index = devicesData.indexOf(device);\n\n    if (index !== -1) {\n      devicesData.splice(index, 1);\n    }\n\n    console.log(devicesData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Device List\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: devicesData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true,\n    clickableRows: true,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    ,\n    onRowClick: (item, index, col, e) => {\n      console.log(item, index, col, e);\n      document.getElementById('imei-input').value = item.IMEI;\n    },\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    },\n    onPagesChange: val => console.log('new pages:', val),\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'IMEI': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CLink, {\n        to: `/modules/devicemanagement/devices/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, item.IMEI)),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: () => removeDevice(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 81\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + devicesData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Add Device\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"imei-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"IMEI\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"imei-input\",\n    id: \"imei-input\",\n    placeholder: \"Please input imei\",\n    autoComplete: \"given-name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"Device Type\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"select\",\n    id: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 27\n    }\n  }, \"Raspberry PI\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 102\n    }\n  }), \" Save\"), /*#__PURE__*/React.createElement(CButton, {\n    type: \"reset\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"danger\",\n    onClick: handleReset,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-ban\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 122\n    }\n  }), \" Reset\")))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Devicemanagement/Devices.jsx"],"names":["React","Component","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CCardFooter","CInvalidFeedback","CIcon","Formik","Yup","devicesData","handleSubmit","event","setTimeout","handleReset","Devices","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","length","fields","key","_style","width","label","sorter","filter","removeDevice","item","device","find","id","index","indexOf","splice","console","log","doubleArrows","align","col","e","document","getElementById","value","IMEI","val","textAlign","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup,CFormText,CLink,CInput,CLabel,CSelect,\r\n  CCardFooter,CInvalidFeedback\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport devicesData from './DevicesData.js'\r\n\r\nconst handleSubmit=(event)=>\r\n{\r\n  setTimeout(() => {\r\n    // alert(JSON.stringify(values, null, 2))\r\n    // console.log('User has been successfully saved!', values)\r\n    // setSubmitting(false)\r\n  }, 2000)\r\n}\r\n\r\nconst handleReset=()=>\r\n{\r\n  \r\n}\r\n\r\n\r\nexport default function Devices() {\r\n  const { useState } = React;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal=(currentPage)=>{\r\n    if(currentPage*currentPagination < devicesData.length)\r\n      return currentPage*currentPagination;\r\n    return devicesData.length;\r\n  }\r\n  const fields = [    \r\n    { key: 'IMEI', _style: { width: '30%'} },        \r\n    { key: 'DeviceType', _style: { width: '30%'} },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n  \r\n  const removeDevice=(item)=>{\r\n    const device = devicesData.find( device => device.id === item.id)\r\n    //console.log(item.id)\r\n    //console.log(device)    \r\n    var index = devicesData.indexOf(device)\r\n    if (index !== -1) {\r\n      devicesData.splice(index, 1);\r\n    }\r\n    console.log(devicesData);\r\n  }\r\n\r\n  return (    \r\n    <div className=\"animated fadeIn\">\r\n      <CRow> \r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >  \r\n              Device List\r\n              {/* <CFormGroup style={{padding:0, margin:0}}  row>            \r\n                <CCol md=\"4\" style={{alignSelf:'center'}}>\r\n                  Device List\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"8\" style={{textAlign:'right'}}>\r\n                  <CButton  variant=\"outline\" size=\"sm\" color=\"primary\"  onClick={()=> document.getElementById('imei-input').value='' } ><CIcon name=\"cil-plus\" />Add Device</CButton>\r\n                </CCol>\r\n              </CFormGroup>               */}\r\n            </CCardHeader>\r\n            <CCardBody>         \r\n            <CDataTable\r\n              items={devicesData}\r\n              fields={fields}\r\n              // columnFilter\r\n              tableFilter\r\n              // footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={currentPagination}\r\n              dark={false}\r\n              hover={false}\r\n              border={true}\r\n              outlined={true}\r\n              loading={false}\r\n              sorter\r\n              clickableRows\r\n              pagination={{ doubleArrows: true, align: 'center' }}\r\n              // loading\r\n              onRowClick={(item,index,col,e) => \r\n                {\r\n                console.log(item,index,col,e)\r\n                document.getElementById('imei-input').value = item.IMEI\r\n                }\r\n              }\r\n              onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n              }\r\n              onPagesChange={(val) => \r\n                console.log('new pages:', val)\r\n              }\r\n              onPaginationChange={(val) => {\r\n                console.log('new pagination:', val);\r\n                setCurrentPagination(val);\r\n              }}\r\n              // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n              // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n              // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n              // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n              scopedSlots = {{\r\n                'IMEI':\r\n                  (item)=>(\r\n                    <td>\r\n                        <CLink to={`/modules/devicemanagement/devices/${item.id}`}>{item.IMEI}</CLink>\r\n                    </td>\r\n                  ),\r\n                'actions':\r\n                  item => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton color=\"light\" onClick={()=>removeDevice(item)}><CIcon name=\"cil-trash\" /></CButton>                      \r\n                      </td>\r\n                    )\r\n                  }\r\n              }}\r\n            />\r\n            <div style={{textAlign:'right'}}>{              \r\n              ((currentPage-1)*currentPagination+1) + '-' + getLastVal(currentPage) +' of '+devicesData.length\r\n              } \r\n            </div>\r\n          </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n            <CCard custom>\r\n              <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex'}}> \r\n                Add Device                \r\n              </CCardHeader>                                      \r\n                <CCardBody>                                       \r\n                  <CForm  onSubmit={handleSubmit} className=\"form-horizontal\"   name='simpleForm'>\r\n                  {/* onSubmit={handleSubmit} */}\r\n                    <CFormGroup row>\r\n                      <CCol md=\"4\">\r\n                        <CLabel htmlFor=\"imei-input\">IMEI</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"8\">\r\n                        <CInput type=\"text\"\r\n                            name=\"imei-input\"\r\n                            id=\"imei-input\"\r\n                            placeholder=\"Please input imei\"\r\n                            autoComplete=\"given-name\"\r\n                            required/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"4\">\r\n                        <CLabel htmlFor=\"select\">Device Type</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"8\">\r\n                        <CSelect custom name=\"select\" id=\"select\">\r\n                          <option value=\"0\">Raspberry PI</option>\r\n                        </CSelect>\r\n                      </CCol>\r\n                    </CFormGroup>                \r\n                    <hr/>            \r\n                    <CButton type=\"submit\"  variant=\"outline\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>         \r\n                    <CButton type=\"reset\" variant=\"outline\"  className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                  </CForm>        \r\n              </CCardBody>   \r\n            </CCard>                 \r\n        </CCol>\r\n      </CRow>\r\n    </div>      \r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}