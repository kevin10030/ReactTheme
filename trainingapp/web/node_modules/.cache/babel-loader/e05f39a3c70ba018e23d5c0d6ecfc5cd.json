{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Devicemanagement\\\\Devices.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect, CCardFooter, CInvalidFeedback } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport _devicesData from './DevicesData.js';\nexport default function Devices() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < devicesData.length) return currentPage * currentPagination;\n    return devicesData.length;\n  };\n\n  const fields = [{\n    key: 'IMEI',\n    _style: {\n      width: '30%',\n      height: 10,\n      background: '#ff0000'\n    }\n  }, {\n    key: 'DeviceType',\n    _style: {\n      width: '30%',\n      height: 10\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '15%',\n      height: 10\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [devicesData, setDevicesData] = useState([]);\n  useEffect(() => {\n    setDevicesData(_devicesData.map(a => ({ ...a\n    })));\n  }, []);\n  const [isAddDevice, setIsAddDevice] = useState(true);\n  const [editId, setEditId] = useState(-1);\n\n  const removeDevice = item => {\n    handleReset();\n    const device = devicesData.find(device => device.id === item.id); //console.log(item.id)\n    //console.log(device)    \n\n    var index = devicesData.indexOf(device);\n\n    if (index !== -1) {\n      devicesData.splice(index, 1);\n    }\n\n    console.log(devicesData.length);\n    setDevicesData(devicesData.map(a => ({ ...a\n    })));\n  };\n\n  const editDevice = item => {\n    document.getElementById('imei-input').value = item.IMEI;\n    setIsAddDevice(false);\n    setEditId(item.id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // alert(JSON.stringify(document.getElementById('imei-input').value, null, 2))\n\n    const device = devicesData.find(device => device.id === editId);\n    var index = devicesData.indexOf(device);\n\n    if (index !== -1) {\n      devicesData[index].IMEI = document.getElementById('imei-input').value;\n    } else {\n      const imei = document.getElementById('imei-input').value;\n      const devicetype = document.getElementById('devicetype-select').value;\n      devicesData.push({\n        id: devicesData.length,\n        IMEI: imei,\n        HeartBeats: '2hours',\n        DeviceType: devicetype,\n        Status: 'Offline'\n      });\n    }\n\n    setDevicesData(devicesData.map(a => ({ ...a\n    })));\n    handleReset(); // console.log('Device has been successfully saved!', devicesData)\n  };\n\n  const handleReset = () => {\n    document.getElementById('imei-input').value = '';\n    setIsAddDevice(true);\n    setEditId(-1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Device List\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: devicesData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: false,\n    outlined: false,\n    loading: false,\n    sorter: false // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    } // onPagesChange={(val) => console.log('new pages:', val)}\n    ,\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'IMEI': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CLink, {\n        to: `/modules/devicemanagement/devices/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, item.IMEI)),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }, editId != item.id ? /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            editDevice(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 112\n          }\n        })) : /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          variant: \"outline\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 83\n          }\n        })), /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            removeDevice(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 111\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + devicesData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, isAddDevice ? 'Add Device' : 'Edit Device'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"imei-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"IMEI\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"imei-input\",\n    id: \"imei-input\",\n    placeholder: \"Please input imei\",\n    autoComplete: \"given-name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"Device Type\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"select\",\n    id: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    id: \"devicetype-select\",\n    value: \"Raspberry PI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"Raspberry PI\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 97\n    }\n  }), \" Save\"), /*#__PURE__*/React.createElement(CButton, {\n    type: \"reset\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"danger\",\n    onClick: handleReset,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-ban\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 117\n    }\n  }), \" Reset\")))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Devicemanagement/Devices.jsx"],"names":["React","Component","useEffect","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CCardFooter","CInvalidFeedback","CIcon","_devicesData","Devices","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","devicesData","length","fields","key","_style","width","height","background","label","sorter","filter","setDevicesData","map","a","isAddDevice","setIsAddDevice","editId","setEditId","removeDevice","item","handleReset","device","find","id","index","indexOf","splice","console","log","editDevice","document","getElementById","value","IMEI","handleSubmit","event","preventDefault","imei","devicetype","push","HeartBeats","DeviceType","Status","doubleArrows","align","val","e","textAlign","display"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect,\r\n  CCardFooter, CInvalidFeedback\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport _devicesData from './DevicesData.js'\r\n\r\n\r\nexport default function Devices() {\r\n  const { useState } = React;\r\n\r\n  \r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal = (currentPage) => {\r\n    if (currentPage * currentPagination < devicesData.length)\r\n      return currentPage * currentPagination;\r\n    return devicesData.length;\r\n  }\r\n  const fields = [\r\n    { key: 'IMEI', _style: { width: '30%',height:10, background:'#ff0000' } },\r\n    { key: 'DeviceType', _style: { width: '30%',height:10 } },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '15%',height:10 },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n\r\n\r\n  const [devicesData, setDevicesData]  = useState([])\r\n  useEffect(() => {\r\n    setDevicesData(_devicesData.map(a => ({...a})))\r\n  }, [])\r\n  const [isAddDevice, setIsAddDevice] = useState(true)\r\n  const [editId, setEditId] = useState(-1)\r\n\r\n  const removeDevice = (item) => {\r\n    handleReset()\r\n    const device = devicesData.find(device => device.id === item.id)\r\n    //console.log(item.id)\r\n    //console.log(device)    \r\n    var index = devicesData.indexOf(device)\r\n    if (index !== -1) {\r\n      devicesData.splice(index, 1);\r\n    }\r\n    console.log(devicesData.length);\r\n\r\n    setDevicesData(devicesData.map(a => ({...a})))\r\n  }\r\n\r\n  const editDevice = (item) => {\r\n    document.getElementById('imei-input').value = item.IMEI;\r\n    setIsAddDevice(false)\r\n    setEditId(item.id)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // alert(JSON.stringify(document.getElementById('imei-input').value, null, 2))\r\n\r\n    const device = devicesData.find(device => device.id === editId)\r\n    var index = devicesData.indexOf(device)\r\n    if (index !== -1) {\r\n      devicesData[index].IMEI = document.getElementById('imei-input').value        \r\n    } else {\r\n      const imei = document.getElementById('imei-input').value\r\n      const devicetype =  document.getElementById('devicetype-select').value\r\n      devicesData.push({id:(devicesData.length),IMEI:imei, HeartBeats:'2hours', DeviceType:devicetype, Status:'Offline' })\r\n    }\r\n    setDevicesData(devicesData.map(a => ({...a})))    \r\n    handleReset()\r\n    // console.log('Device has been successfully saved!', devicesData)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('imei-input').value = ''\r\n    setIsAddDevice(true)\r\n    setEditId(-1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow>\r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >\r\n              Device List\r\n              {/* <CFormGroup style={{padding:0, margin:0}}  row>            \r\n                <CCol md=\"4\" style={{alignSelf:'center'}}>\r\n                  Device List\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"8\" style={{textAlign:'right'}}>\r\n                  <CButton  variant=\"outline\" size=\"sm\" color=\"primary\"  onClick={()=> document.getElementById('imei-input').value='' } ><CIcon name=\"cil-plus\" />Add Device</CButton>\r\n                </CCol>\r\n              </CFormGroup>               */}\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={devicesData}\r\n                fields={fields}\r\n                // columnFilter\r\n                tableFilter\r\n                // footer\r\n                itemsPerPageSelect\r\n                itemsPerPage={currentPagination}\r\n                dark={false}\r\n                hover={false}\r\n                border={false}\r\n                outlined={false}\r\n                loading={false}\r\n                sorter={false}\r\n                // clickableRows\r\n                pagination={{ doubleArrows: true, align: 'center' }}\r\n                // loading\r\n                // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\r\n                onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n                }\r\n                // onPagesChange={(val) => console.log('new pages:', val)}\r\n                onPaginationChange={(val) => {\r\n                  console.log('new pagination:', val);\r\n                  setCurrentPagination(val);\r\n                }}\r\n                // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n                // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n                // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n                // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n                scopedSlots={{\r\n                  'IMEI':\r\n                    (item) => (\r\n                      <td>\r\n                        <CLink to={`/modules/devicemanagement/devices/${item.id}`}>{item.IMEI}</CLink>\r\n                      </td>\r\n                    ),\r\n                  'actions':\r\n                    item => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                          {\r\n                            editId != item.id ?\r\n                              <CButton color=\"light\" onClick={(e) => { e.preventDefault(); editDevice(item) }}><CIcon name=\"cil-pencil\" /></CButton>\r\n                              : <CButton color=\"light\" variant=\"outline\" disabled><CIcon name=\"cil-pencil\" /></CButton>\r\n                          }\r\n                          <CButton color=\"light\"  onClick={(e) => { e.preventDefault(); removeDevice(item) }}><CIcon name=\"cil-trash\" /></CButton>\r\n                        </td>\r\n                      )\r\n                    }\r\n                }}\r\n              />\r\n              <div style={{ textAlign: 'right' }}>{\r\n                ((currentPage - 1) * currentPagination + 1) + '-' + getLastVal(currentPage) + ' of ' + devicesData.length\r\n              }\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n          <CCard custom>\r\n            <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex' }}>\r\n              {\r\n                isAddDevice ? 'Add Device' : 'Edit Device'\r\n              }\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\" name='simpleForm'>\r\n                {/* onSubmit={handleSubmit} */}\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"imei-input\">IMEI</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"text\"\r\n                      name=\"imei-input\"\r\n                      id=\"imei-input\"\r\n                      placeholder=\"Please input imei\"\r\n                      autoComplete=\"given-name\"\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"select\">Device Type</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CSelect custom name=\"select\" id=\"select\">\r\n                      <option id=\"devicetype-select\" value=\"Raspberry PI\">Raspberry PI</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <hr />\r\n                <CButton type=\"submit\" variant=\"outline\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>\r\n                <CButton type=\"reset\" variant=\"outline\" className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}