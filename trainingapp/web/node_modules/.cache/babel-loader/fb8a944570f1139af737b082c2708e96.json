{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\ContactPage.js\";\nimport React from \"react\";\nimport { CButton, CCard, CCardBody, CCardFooter, CCol, CContainer, CForm, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow, CTextarea, CFormGroup } from '@coreui/react';\nimport CIcon from '@coreui/icons-react'; // @material-ui/core components\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/pricingPageStyle.js\";\nimport { useStyles } from '../../Layout/Theme/PageTheme';\nconst useStyles1 = makeStyles(styles);\nexport default function ContactPage() {\n  const classes1 = useStyles1();\n  const theme = useTheme();\n  const classes = useStyles();\n  const [name, setName] = React.useState('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      url: 'https://hfa3ovai45.execute-api.us-east-2.amazonaws.com/api/category',\n      method: 'post',\n      data: {\n        'name': name\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.data).then(data => {//setToastClass('success');\n      //setToastMessage('Success: ' + data);\n      //showToast(true);\n      //setCategoryName('');\n      //setParent(0);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes1.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"9\",\n    lg: \"7\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCardBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    id: \"signUpForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"#3c4b64\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, \"Create your account\"), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    placeholder: \"Name\",\n    autoComplete: \"name\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"email\",\n    placeholder: \"Email\",\n    autoComplete: \"email\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, \"@\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    placeholder: \"Subject\",\n    autoComplete: \"subject\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CTextarea, {\n    name: \"textarea-input\",\n    id: \"textarea-input\",\n    rows: \"9\",\n    placeholder: \"Content...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: \"success\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Create Account\"))))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/ContactPage.js"],"names":["React","CButton","CCard","CCardBody","CCardFooter","CCol","CContainer","CForm","CInput","CInputGroup","CInputGroupPrepend","CInputGroupText","CRow","CTextarea","CFormGroup","CIcon","Grid","Typography","Container","Paper","Box","SendIcon","TextField","Button","axios","FacebookIcon","LinkedInIcon","TwitterIcon","YouTubeIcon","useTheme","makeStyles","styles","useStyles","useStyles1","ContactPage","classes1","theme","classes","name","setName","useState","handleSubmit","event","preventDefault","url","method","data","headers","then","response","container","color","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CTextarea,\n  CFormGroup\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// @material-ui/core components\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\n\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/pricingPageStyle.js\";\nimport  { useStyles }  from '../../Layout/Theme/PageTheme';\nconst useStyles1 = makeStyles(styles);\n\nexport default function ContactPage() {\n  const classes1 = useStyles1();\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const [name, setName] = React.useState('');\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      url: 'https://hfa3ovai45.execute-api.us-east-2.amazonaws.com/api/category',\n      method: 'post',\n      data: {\n        'name': name\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.data).then((data) => {\n      //setToastClass('success');\n      //setToastMessage('Success: ' + data);\n      //showToast(true);\n      //setCategoryName('');\n      //setParent(0);\n    });\n  }\n\n  return (\n    <div className={classes1.container}>\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm id=\"signUpForm\" onSubmit={handleSubmit}>\n                  <h1 style={{color:\"#3c4b64\"}}>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput \n                      type=\"text\" \n                      placeholder=\"Name\" \n                      autoComplete=\"name\" \n                      onChange={e => setName(e.target.value)}\n                      required\n                      value={name}\n                      />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput \n                      type=\"email\" \n                      placeholder=\"Email\" \n                      autoComplete=\"email\" \n                      onChange={e => setName(e.target.value)}\n                      required\n                      value={name}\n                    />                    \n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput \n                      type=\"text\" \n                      placeholder=\"Subject\" \n                      autoComplete=\"subject\" \n                      onChange={e => setName(e.target.value)}\n                      required\n                      value={name}\n                    />                    \n                  </CInputGroup>\n                  <CFormGroup row>\n                    <CTextarea \n                        name=\"textarea-input\" \n                        id=\"textarea-input\" \n                        rows=\"9\"\n                        placeholder=\"Content...\" \n                      />\n                  </CFormGroup>\n                  <CButton type=\"submit\"  color=\"success\" block>Create Account</CButton>\n                </CForm>\n              </CCardBody>              \n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>  \n      {/* <Container className={classes.mainContent}>\n        <Grid container spacing={2} justify=\"center\">\n          <Box my={2}>\n            <Typography variant=\"h5\" color=\"primary\">\n              Contact Us\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={7}>\n            <Paper>\n              <Box p={3}>\n                <Typography style={{textAlign:\"center\",marginBottom:theme.spacing(3)}}>\n                  Drop a message, and we'll get back to you soon.\n                </Typography>\n                <form className={classes.root} onSubmit={handleSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                      <TextField\n                        label=\"Name\"\n                        id=\"name\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onChange={e => setName(e.target.value)}\n                        required\n                        value={name}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <TextField\n                        label=\"EMail\"\n                        id=\"email\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onChange={e => setName(e.target.value)}\n                        required\n                        value={name}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        label=\"Subject\"\n                        id=\"subject\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onChange={e => setName(e.target.value)}\n                        required\n                        value={name}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        label=\"Message\"\n                        id=\"message\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        onChange={e => setName(e.target.value)}\n                        required\n                        value={name}\n                        fullWidth\n                        multiline\n                        rows={4}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{marginTop: theme.spacing(2)}}>\n                    <SendIcon fontSize=\"small\" /> &nbsp; Send\n                  </Button>\n                </form>\n              </Box>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={5}>\n            <Paper>\n              <Box p={3}>\n                <Typography style={{textAlign:\"center\",marginBottom:theme.spacing(3)}}>\n                  Connect with Us\n                </Typography>\n                <Box style={{textAlign:\"center\"}}>\n                  <FacebookIcon fontSize=\"large\" color=\"primary\" className={classes.socialIcon} />\n                  <YouTubeIcon fontSize=\"large\" color=\"secondary\" className={classes.socialIcon} />\n                  <TwitterIcon fontSize=\"large\" style={{color:\"#42a5f5\"}} className={classes.socialIcon} />\n                  <LinkedInIcon fontSize=\"large\" color=\"primary\" className={classes.socialIcon} />\n                </Box>\n              </Box>\n            </Paper>\n            <br/>\n            <Grid>\n              <Box p={3} component={Paper} className={classes.contactImage}>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}