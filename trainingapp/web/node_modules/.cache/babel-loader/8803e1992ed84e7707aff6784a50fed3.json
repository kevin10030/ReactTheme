{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\LoginPage.js\";\nimport React from \"react\";\nimport { TextField } from '@material-ui/core'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // @material-ui/icons\n\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport CIcon from '@coreui/icons-react';\nimport { NavLink as RouterLink, Route, Link, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify';\nimport { CButton, CCard, CCardBody, CCardGroup, CCol, CContainer, CForm, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CRow } from '@coreui/react';\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function LoginPage() {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  React.useEffect(() => {\n    setConfig();\n  }, []);\n\n  function setConfig() {\n    Amplify.configure({\n      Auth: {\n        identityPoolId: process.env.REACT_APP_AWS_REGION,\n        identityPoolRegion: process.env.REACT_APP_AWS_REGION,\n        region: process.env.REACT_APP_AWS_REGION,\n        userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n      }\n    });\n    const ga = window.gapi && window.gapi.auth2 ? window.gapi.auth2.getAuthInstance() : null;\n    if (!ga) createScript();\n  }\n\n  function googleSignIn() {\n    const ga = window.gapi.auth2.getAuthInstance();\n    ga.signIn().then(googleUser => {\n      getAWSCredentials(googleUser);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  async function getAWSCredentials(googleUser) {\n    const {\n      id_token,\n      expires_at\n    } = googleUser.getAuthResponse();\n    const profile = googleUser.getBasicProfile();\n    let user = {\n      email: profile.getEmail(),\n      name: profile.getName()\n    };\n    const credentials = await Auth.federatedSignIn('google', {\n      token: id_token,\n      expires_at\n    }, user);\n    console.log('credentials', credentials);\n    history.push('/modules');\n  }\n\n  function createScript() {\n    // load the Google SDK\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/platform.js';\n    script.async = true;\n    script.onload = initGapi;\n    document.body.appendChild(script);\n  }\n\n  function initGapi() {\n    // init the Google SDK client\n    const g = window.gapi;\n    g.load('auth2', function () {\n      g.auth2.init({\n        client_id: process.env.REACT_APP_AWS_GOOGLE_CLIENT_ID,\n        // authorized scopes\n        scope: 'profile email openid'\n      });\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email + ' ' + password);\n\n    try {\n      const user = await Auth.signIn({\n        username: email,\n        password: password\n      });\n      console.log(user);\n      history.push('/modules');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, \"Sign In to your account\"), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    placeholder: \"Username\",\n    autoComplete: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(CInputGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupPrepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CInputGroupText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-lock-locked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CInput, {\n    type: \"password\",\n    placeholder: \"Password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 27\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"6\",\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"link\",\n    className: \"px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 27\n    }\n  }, \"Forgot password?\"))))))))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/LoginPage.js"],"names":["React","TextField","makeStyles","InputAdornment","Face","Email","LockOutlined","CIcon","NavLink","RouterLink","Route","Link","useHistory","Amplify","Auth","CButton","CCard","CCardBody","CCardGroup","CCol","CContainer","CForm","CInput","CInputGroup","CInputGroupPrepend","CInputGroupText","CRow","styles","useStyles","LoginPage","cardAnimaton","setCardAnimation","useState","setTimeout","classes","history","email","setEmail","password","setPassword","useEffect","setConfig","configure","identityPoolId","process","env","REACT_APP_AWS_REGION","identityPoolRegion","region","userPoolId","REACT_APP_AWS_USER_POOL_ID","userPoolWebClientId","REACT_APP_AWS_USER_POOL_CLIENT_ID","ga","window","gapi","auth2","getAuthInstance","createScript","googleSignIn","signIn","then","googleUser","getAWSCredentials","error","console","log","id_token","expires_at","getAuthResponse","profile","getBasicProfile","user","getEmail","name","getName","credentials","federatedSignIn","token","push","script","document","createElement","src","async","onload","initGapi","body","appendChild","g","load","init","client_id","REACT_APP_AWS_GOOGLE_CLIENT_ID","scope","handleSubmit","event","preventDefault","username","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,OAAO,IAAIC,UAApB,EAAgCC,KAAhC,EAAsCC,IAAtC,EAA4CC,UAA5C,QAA8D,kBAA9D;AACA,OAAOC,OAAP,IAAkBC,IAAlB,QAA8B,aAA9B;AAEA,SACEC,OADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,UANF,EAOEC,KAPF,EAQEC,MARF,EASEC,WATF,EAUEC,kBAVF,EAWEC,eAXF,EAYEC,IAZF,QAaO,eAbP;AAgBA,OAAOC,MAAP,MAAmB,mFAAnB;AAEA,MAAMC,SAAS,GAAG1B,UAAU,CAACyB,MAAD,CAA5B;AAEA,eAAe,SAASE,SAAT,GAAqB;AAClC,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmC/B,KAAK,CAACgC,QAAN,CAAe,YAAf,CAAzC;AACAC,EAAAA,UAAU,CAAC,YAAW;AACpBF,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAFS,EAEP,GAFO,CAAV;AAGA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,OAAO,GAAGvB,UAAU,EAA1B;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAACgC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BvC,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAhC;AAGAhC,EAAAA,KAAK,CAACwC,SAAN,CAAgB,MAAM;AACpBC,IAAAA,SAAS;AACV,GAFD,EAEG,EAFH;;AAIA,WAASA,SAAT,GAAqB;AACnB5B,IAAAA,OAAO,CAAC6B,SAAR,CAAkB;AAChB5B,MAAAA,IAAI,EAAE;AACJ6B,QAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADxB;AAEJC,QAAAA,kBAAkB,EAAEH,OAAO,CAACC,GAAR,CAAYC,oBAF5B;AAGJE,QAAAA,MAAM,EAAEJ,OAAO,CAACC,GAAR,CAAYC,oBAHhB;AAIJG,QAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK,0BAJpB;AAKJC,QAAAA,mBAAmB,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAL7B;AADU,KAAlB;AAUA,UAAMC,EAAE,GAAGC,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYC,KAA3B,GACTF,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EADS,GAEP,IAFJ;AAGA,QAAI,CAACJ,EAAL,EAASK,YAAY;AACtB;;AAED,WAASC,YAAT,GAAwB;AACtB,UAAMN,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EAAX;AACAJ,IAAAA,EAAE,CAACO,MAAH,GAAYC,IAAZ,CACEC,UAAU,IAAI;AACZC,MAAAA,iBAAiB,CAACD,UAAD,CAAjB;AACH,KAHD,EAIAE,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND;AAOD;;AAED,iBAAeD,iBAAf,CAAiCD,UAAjC,EAA6C;AAC3C,UAAM;AAAEK,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2BN,UAAU,CAACO,eAAX,EAAjC;AACA,UAAMC,OAAO,GAAGR,UAAU,CAACS,eAAX,EAAhB;AACA,QAAIC,IAAI,GAAG;AACTpC,MAAAA,KAAK,EAAEkC,OAAO,CAACG,QAAR,EADE;AAETC,MAAAA,IAAI,EAAEJ,OAAO,CAACK,OAAR;AAFG,KAAX;AAKA,UAAMC,WAAW,GAAG,MAAM9D,IAAI,CAAC+D,eAAL,CACxB,QADwB,EAExB;AAAEC,MAAAA,KAAK,EAAEX,QAAT;AAAmBC,MAAAA;AAAnB,KAFwB,EAGtBI,IAHsB,CAA1B;AAKAP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BU,WAA3B;AACAzC,IAAAA,OAAO,CAAC4C,IAAR,CAAa,UAAb;AACD;;AAED,WAASrB,YAAT,GAAwB;AACtB;AACA,UAAMsB,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,wCAAb;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgBC,QAAhB;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACD;;AAED,WAASM,QAAT,GAAoB;AAClB;AACA,UAAMG,CAAC,GAAGnC,MAAM,CAACC,IAAjB;AACAkC,IAAAA,CAAC,CAACC,IAAF,CAAO,OAAP,EAAgB,YAAW;AACzBD,MAAAA,CAAC,CAACjC,KAAF,CAAQmC,IAAR,CAAa;AACXC,QAAAA,SAAS,EAAEhD,OAAO,CAACC,GAAR,CAAYgD,8BADZ;AAEX;AACAC,QAAAA,KAAK,EAAE;AAHI,OAAb;AAKD,KAND;AAOD;;AAED,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAK,GAAG,GAAR,GAAcE,QAA1B;;AACA,QAAI;AACF,YAAMkC,IAAI,GAAG,MAAM1D,IAAI,CAAC8C,MAAL,CAAY;AAC7BsC,QAAAA,QAAQ,EAAE9D,KADmB;AAE7BE,QAAAA,QAAQ,EAAEA;AAFmB,OAAZ,CAAnB;AAIA2B,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACArC,MAAAA,OAAO,CAAC4C,IAAR,CAAa,UAAb;AACA1C,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KATD,CASE,OAAOyB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACD;AACF;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAE9B,OAAO,CAACiE,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,WAAW,EAAC,UAAhC;AAA2C,IAAA,YAAY,EAAC,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHJ,eAWI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,WAAW,EAAC,UAApC;AAA+C,IAAA,YAAY,EAAC,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAXJ,eAmBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAJF,CAnBJ,CADF,CADF,CADF,CADF,CADF,CADF,CADA,CADF,CADF;AA8ID","sourcesContent":["import React from \"react\";\nimport { TextField } from '@material-ui/core';\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n// @material-ui/icons\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport CIcon from '@coreui/icons-react'\n\nimport { NavLink as RouterLink, Route,Link, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\n\n\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage() {\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n \n  React.useEffect(() => {\n    setConfig();\n  }, []);\n\n  function setConfig() {\n    Amplify.configure({\n      Auth: {\n        identityPoolId: process.env.REACT_APP_AWS_REGION,\n        identityPoolRegion: process.env.REACT_APP_AWS_REGION,\n        region: process.env.REACT_APP_AWS_REGION,\n        userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n      },\n    });\n\n    const ga = window.gapi && window.gapi.auth2 ?\n      window.gapi.auth2.getAuthInstance() :\n        null;\n    if (!ga) createScript();\n  }\n\n  function googleSignIn() {\n    const ga = window.gapi.auth2.getAuthInstance();\n    ga.signIn().then(\n      googleUser => {\n        getAWSCredentials(googleUser);\n    },\n    error => {\n      console.log(error);\n    });\n  }\n\n  async function getAWSCredentials(googleUser) {\n    const { id_token, expires_at } = googleUser.getAuthResponse();\n    const profile = googleUser.getBasicProfile();\n    let user = {\n      email: profile.getEmail(),\n      name: profile.getName()\n    };\n\n    const credentials = await Auth.federatedSignIn(\n      'google',\n      { token: id_token, expires_at },\n        user\n    );\n    console.log('credentials', credentials);\n    history.push('/modules');\n  }\n\n  function createScript() {\n    // load the Google SDK\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/platform.js';\n    script.async = true;\n    script.onload = initGapi;\n    document.body.appendChild(script);\n  }\n\n  function initGapi() {\n    // init the Google SDK client\n    const g = window.gapi;\n    g.load('auth2', function() {\n      g.auth2.init({\n        client_id: process.env.REACT_APP_AWS_GOOGLE_CLIENT_ID,\n        // authorized scopes\n        scope: 'profile email openid'\n      });\n    });\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    console.log(email + ' ' + password)\n    try {\n      const user = await Auth.signIn({\n        username: email,\n        password: password\n      });\n      console.log(user);\n      history.push('/modules');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  \n  return (\n    <div className={classes.container}>\n      <div className=\"c-app\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"4\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                      <h1 className=\"text-muted\">Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\" />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-lock-locked\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs=\"6\">\n                          <CButton color=\"primary\" className=\"px-4\">Login</CButton>\n                        </CCol>\n                        <CCol xs=\"6\" className=\"text-right\">\n                          <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n                {/* <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CCardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.</p>\n                      <Link to=\"/register\">\n                        <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                      </Link>\n                    </div>\n                  </CCardBody>\n                </CCard> */}\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n\n      {/* <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={6} md={4}>\n          <form id=\"signInForm\" onSubmit={handleSubmit}>\n            <Card login className={classes[cardAnimaton]}>\n              <CardHeader\n                className={`${classes.cardHeader} ${classes.textCenter}`}\n                color=\"rose\"\n              >\n                <h4 className={classes.cardTitle}>Log in</h4>\n                <div className={classes.socialLine}>\n                  {[\n                    <CIcon name=\"cib-facebook\" />,\n                    <CIcon name=\"cib-twitter\" />,\n                    <CIcon name=\"cib-google\"  />\n                  ].map((prop, key) => {\n                    return (\n                      <Button\n                        color=\"transparent\"\n                        justIcon\n                        key={key}\n                        className={classes.customButtonClass}\n                        onClick={key==2 ? googleSignIn : ''}\n                      >\n                        {prop}\n                      </Button>\n                    );\n                  })}\n                </div>\n              </CardHeader>\n              <CardBody>                \n                <CustomInput\n                  labelText=\"Email Address *\"\n                  id=\"email\"\n                  value={email}\n                  required\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Email className={classes.inputAdornmentIcon} />\n                      </InputAdornment>\n                    ),\n                    onChange: event => {                      \n                      setEmail(event.target.value)\n                    },\n                    type: \"email\"\n                  }}                  \n                />\n                <CustomInput\n                  labelText=\"Password *\"\n                  id=\"password\"\n                  value={password}\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <LockOutlined className={classes.inputAdornmentIcon}>\n                          lock_outline\n                        </LockOutlined>\n                      </InputAdornment>\n                    ),\n                    onChange: event => {                      \n                      setPassword(event.target.value)\n                    },\n                    type: \"password\",\n                    autoComplete: \"off\",\n                  }}\n                  required\n                />\n              </CardBody>\n              <CardFooter className={classes.justifyContentCenter}>\n                <Button type=\"submit\" color=\"rose\" simple size=\"lg\" block>\n                  Let{\"'\"}s Go\n                </Button>\n              </CardFooter>\n            </Card>\n          </form>\n        </GridItem>\n      </GridContainer> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}