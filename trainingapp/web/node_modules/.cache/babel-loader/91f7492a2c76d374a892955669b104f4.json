{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\DeviceSensorTable.jsx\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  })))\n};\nexport default function Devices() {\n  const {\n    useState\n  } = React;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [columns, setColumns] = useState([{\n    title: 'No',\n    field: 'no',\n    editable: 'never'\n  }, {\n    title: 'Sensor Type',\n    field: 'sensorType'\n  }, {\n    title: 'High Threshold',\n    field: 'highThreshold'\n  }, {\n    title: 'Low Threshold',\n    field: 'lowThreshold'\n  }]);\n  const [data, setData] = useState([{\n    no: '1',\n    sensorType: 'Camera',\n    highThreshold: \"0\",\n    lowThreshold: '0'\n  }, {\n    no: '2',\n    sensorType: 'Temperature',\n    highThreshold: \"999\",\n    lowThreshold: '100'\n  }]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minWidth: '100%',\n      paddingLeft: 100,\n      paddingRight: 100,\n      paddingTop: 15,\n      paddingBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Sensor List\",\n    columns: columns,\n    data: data,\n    icons: tableIcons,\n    onRowClick: (evt, selectedRow) => setSelectedRow(selectedRow.tableData.id),\n    options: {\n      headerStyle: {\n        backgroundColor: '#58e2ed',\n        color: '#FFF'\n      },\n      // rowStyle: rowData => ({\n      //   backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\n      // })\n      // rowStyle: {\n      //   backgroundColor: '#EEE',\n      //   height:10\n      // },\n      maxBodyHeight: 15,\n      pageSize: 2,\n      pageSizeOptions: [2, 4, 6]\n    },\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          newData['no'] = data.length + 1;\n          setData([...data, newData]);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setData([...dataUpdate]);\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setData([...dataDelete]);\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/DeviceSensorTable.jsx"],"names":["React","Component","MaterialTable","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","Devices","useState","selectedRow","setSelectedRow","columns","setColumns","title","field","editable","data","setData","no","sensorType","highThreshold","lowThreshold","minWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","evt","tableData","id","headerStyle","backgroundColor","color","maxBodyHeight","pageSize","pageSizeOptions","onRowAdd","newData","Promise","resolve","reject","setTimeout","length","onRowUpdate","oldData","dataUpdate","index","onRowDelete","dataDelete","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAEjB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,MAAD,oBAAYD,KAAZ;AAAmB,IAAA,GAAG,EAAEC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CADA;AAEfhB,EAAAA,KAAK,EAAEH,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,KAAD,oBAAWD,KAAX;AAAkB,IAAA,GAAG,EAAEC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAFF;AAGfb,EAAAA,KAAK,EAAEN,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,KAAD,oBAAWD,KAAX;AAAkB,IAAA,GAAG,EAAEC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAHF;AAIfC,EAAAA,MAAM,EAAEpB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,aAAD,oBAAmBD,KAAnB;AAA0B,IAAA,GAAG,EAAEC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAJH;AAKfE,EAAAA,WAAW,EAAErB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,YAAD,oBAAkBD,KAAlB;AAAyB,IAAA,GAAG,EAAEC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CALR;AAMfX,EAAAA,IAAI,EAAER,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,IAAD,oBAAUD,KAAV;AAAiB,IAAA,GAAG,EAAEC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAND;AAOfG,EAAAA,MAAM,EAAEtB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,OAAD,oBAAaD,KAAb;AAAoB,IAAA,GAAG,EAAEC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAPH;AAQfI,EAAAA,MAAM,EAAEvB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,UAAD,oBAAgBD,KAAhB;AAAuB,IAAA,GAAG,EAAEC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CARH;AASfT,EAAAA,SAAS,EAAEV,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,SAAD,oBAAeD,KAAf;AAAsB,IAAA,GAAG,EAAEC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CATN;AAUfR,EAAAA,QAAQ,EAAEX,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,QAAD,oBAAcD,KAAd;AAAqB,IAAA,GAAG,EAAEC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAVL;AAWfK,EAAAA,QAAQ,EAAExB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,YAAD,oBAAkBD,KAAlB;AAAyB,IAAA,GAAG,EAAEC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAXL;AAYfM,EAAAA,YAAY,EAAEzB,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,WAAD,oBAAiBD,KAAjB;AAAwB,IAAA,GAAG,EAAEC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAZT;AAafO,EAAAA,WAAW,EAAE1B,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,KAAD,oBAAWD,KAAX;AAAkB,IAAA,GAAG,EAAEC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAbR;AAcfL,EAAAA,MAAM,EAAEd,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,MAAD,oBAAYD,KAAZ;AAAmB,IAAA,GAAG,EAAEC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAdH;AAefQ,EAAAA,SAAS,EAAE3B,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,aAAD,oBAAmBD,KAAnB;AAA0B,IAAA,GAAG,EAAEC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAfN;AAgBfS,EAAAA,eAAe,EAAE5B,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,MAAD,oBAAYD,KAAZ;AAAmB,IAAA,GAAG,EAAEC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB,CAhBZ;AAiBfJ,EAAAA,UAAU,EAAEf,UAAU,CAAC,CAACkB,KAAD,EAAQC,GAAR,kBAAgB,oBAAC,UAAD,oBAAgBD,KAAhB;AAAuB,IAAA,GAAG,EAAEC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;AAjBP,CAAnB;AAoBA,eAAe,SAASU,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAejC,KAArB;AACA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CACrC;AAAEK,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE,IAAtB;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GADqC,EAErC;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAFqC,EAGrC;AAAED,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAHqC,EAIrC;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAJqC,CAAD,CAAtC;AAOA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAC/B;AAAEU,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,UAAU,EAAE,QAAvB;AAAiCC,IAAAA,aAAa,EAAE,GAAhD;AAAqDC,IAAAA,YAAY,EAAC;AAAlE,GAD+B,EAE/B;AAAEH,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,UAAU,EAAE,aAAvB;AAAsCC,IAAAA,aAAa,EAAE,KAArD;AAA4DC,IAAAA,YAAY,EAAC;AAAzE,GAF+B,CAAD,CAAhC;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,WAAW,EAAC,GAAhC;AAAqCC,MAAAA,YAAY,EAAC,GAAlD;AAAuDC,MAAAA,UAAU,EAAC,EAAlE;AAAsEC,MAAAA,aAAa,EAAC;AAApF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAEf,OAFX;AAGE,IAAA,IAAI,EAAEK,IAHR;AAIE,IAAA,KAAK,EAAEtB,UAJT;AAKE,IAAA,UAAU,EAAG,CAACiC,GAAD,EAAMlB,WAAN,KAAsBC,cAAc,CAACD,WAAW,CAACmB,SAAZ,CAAsBC,EAAvB,CALnD;AAME,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE,SADN;AAEXC,QAAAA,KAAK,EAAE;AAFI,OADN;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,aAAa,EAAC,EAZP;AAaPC,MAAAA,QAAQ,EAAC,CAbF;AAcPC,MAAAA,eAAe,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAdT,KANX;AAsBE,IAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACfJ,UAAAA,OAAO,CAAC,IAAD,CAAP,GAAiBrB,IAAI,CAAC0B,MAAL,GAAc,CAA/B;AACAzB,UAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUqB,OAAV,CAAD,CAAP;AAEAE,UAAAA,OAAO;AACR,SALS,EAKP,IALO,CAAV;AAMD,OAPD,CAFM;AAURI,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMI,UAAU,GAAG,CAAC,GAAG7B,IAAJ,CAAnB;AACA,gBAAM8B,KAAK,GAAGF,OAAO,CAAChB,SAAR,CAAkBC,EAAhC;AACAgB,UAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBT,OAApB;AACApB,UAAAA,OAAO,CAAC,CAAC,GAAG4B,UAAJ,CAAD,CAAP;AAEAN,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD,CAXM;AAqBRQ,MAAAA,WAAW,EAAEH,OAAO,IAClB,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMO,UAAU,GAAG,CAAC,GAAGhC,IAAJ,CAAnB;AACA,gBAAM8B,KAAK,GAAGF,OAAO,CAAChB,SAAR,CAAkBC,EAAhC;AACAmB,UAAAA,UAAU,CAACC,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;AACA7B,UAAAA,OAAO,CAAC,CAAC,GAAG+B,UAAJ,CAAD,CAAP;AAEAT,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD;AAtBM,KAtBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AA4DD","sourcesContent":["import React, { Component } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nexport default function Devices() {\r\n  const { useState } = React;\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'No', field: 'no',editable: 'never' },\r\n    { title: 'Sensor Type', field: 'sensorType'},\r\n    { title: 'High Threshold', field: 'highThreshold'},\r\n    { title: 'Low Threshold', field: 'lowThreshold' },\r\n  ]);\r\n  \r\n  const [data, setData] = useState([\r\n    { no: '1', sensorType: 'Camera', highThreshold: \"0\", lowThreshold:'0' },\r\n    { no: '2', sensorType: 'Temperature', highThreshold: \"999\", lowThreshold:'100' },\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ minWidth: '100%', paddingLeft:100, paddingRight:100, paddingTop:15, paddingBottom:15 }}>\r\n    <MaterialTable\r\n      title=\"Sensor List\"\r\n      columns={columns}\r\n      data={data}\r\n      icons={tableIcons}\r\n      onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n      options={{\r\n        headerStyle: {\r\n          backgroundColor: '#58e2ed',\r\n          color: '#FFF'\r\n        },\r\n        // rowStyle: rowData => ({\r\n        //   backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n        // })\r\n        // rowStyle: {\r\n        //   backgroundColor: '#EEE',\r\n        //   height:10\r\n        // },\r\n        maxBodyHeight:15,\r\n        pageSize:2,\r\n        pageSizeOptions:[2,4,6]\r\n      }}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              newData['no'] =  data.length + 1;\r\n              setData([...data, newData]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n      }}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}