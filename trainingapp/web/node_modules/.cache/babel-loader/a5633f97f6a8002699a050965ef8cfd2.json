{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Devicemanagement\\\\Devices.jsx\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect, CCardFooter, CInvalidFeedback } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport devicesData from './DevicesData.js';\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    imei: Yup.string().min(2, `First name has to be at least 2 characters`).required('IMEI is required')\n  });\n};\n\nconst validate = getValidationSchema => {\n  return values => {\n    const validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nconst getErrorsFromValidationError = validationError => {\n  const FIRST_ERROR = 0;\n  return validationError.inner.reduce((errors, error) => {\n    return { ...errors,\n      [error.path]: error.errors[FIRST_ERROR]\n    };\n  }, {});\n};\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  userName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  accept: false\n};\n\nconst onSubmit = (values, {\n  setSubmitting,\n  setErrors\n}) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2)); // console.log('User has been successfully saved!', values)\n\n    setSubmitting(false);\n  }, 2000);\n};\n\nconst findFirstError = (formName, hasError) => {\n  const form = document.forms[formName];\n\n  for (let i = 0; i < form.length; i++) {\n    if (hasError(form[i].name)) {\n      form[i].focus();\n      break;\n    }\n  }\n};\n\nconst validateForm = errors => {\n  findFirstError('simpleForm', fieldName => {\n    return Boolean(errors[fieldName]);\n  });\n};\n\nexport default function Devices() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < devicesData.length) return currentPage * currentPagination;\n    return devicesData.length;\n  };\n\n  const fields = [{\n    key: 'IMEI',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'DeviceType',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n\n  const removeDevice = item => {\n    const device = devicesData.find(device => device.id === item.id); //console.log(item.id)\n    //console.log(device)    \n\n    var index = devicesData.indexOf(device);\n\n    if (index !== -1) {\n      devicesData.splice(index, 1);\n    }\n\n    console.log(devicesData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    style: {\n      padding: 0,\n      margin: 0\n    },\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Device List\"), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    variant: \"outline\",\n    size: \"sm\",\n    color: \"primary\",\n    onClick: () => document.getElementById('imei-input').value = '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 138\n    }\n  }), \"Add Device\")))), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: devicesData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true,\n    clickableRows: true,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    ,\n    onRowClick: (item, index, col, e) => {\n      console.log(item, index, col, e);\n      document.getElementById('imei-input').value = item.IMEI;\n    },\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    },\n    onPagesChange: val => console.log('new pages:', val),\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'IMEI': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CLink, {\n        to: `/modules/devicemanagement/devices/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, item.IMEI)),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: () => removeDevice(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 81\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + devicesData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Add Device\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: validate(validationSchema),\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    status,\n    dirty,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    isValid,\n    handleReset,\n    setTouched\n  }) => /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"text-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 27\n    }\n  }, \"IMEI\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"imei-input\",\n    id: \"imei-input\",\n    placeholder: \"Please input imei\",\n    autoComplete: \"given-name\",\n    valid: !errors.imei,\n    invalid: touched.imei && !!errors.imei,\n    autoFocus: true,\n    required: true,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.imei,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(CInvalidFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, errors.imei))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 27\n    }\n  }, \"Device Type\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"select\",\n    id: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, \"Raspberry PI\"))))), /*#__PURE__*/React.createElement(CCardFooter, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    size: \"lg\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 97\n    }\n  }), \" \", isSubmitting ? 'Wait...' : 'Save'))))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Devicemanagement/Devices.jsx"],"names":["React","Component","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CCardFooter","CInvalidFeedback","CIcon","Formik","Yup","devicesData","validationSchema","values","object","shape","imei","string","min","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","initialValues","firstName","lastName","userName","email","password","confirmPassword","accept","onSubmit","setSubmitting","setErrors","setTimeout","alert","JSON","stringify","findFirstError","formName","hasError","form","document","forms","i","length","name","focus","validateForm","fieldName","Boolean","Devices","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","fields","key","_style","width","label","sorter","filter","removeDevice","item","device","find","id","index","indexOf","splice","console","log","padding","margin","alignSelf","textAlign","getElementById","value","doubleArrows","align","col","e","IMEI","val","display","touched","status","dirty","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","handleReset","setTouched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup,CFormText,CLink,CInput,CLabel,CSelect,\r\n  CCardFooter,CInvalidFeedback\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport devicesData from './DevicesData.js'\r\n\r\nconst validationSchema = function (values) {\r\n  return Yup.object().shape({\r\n    imei: Yup.string()\r\n    .min(2, `First name has to be at least 2 characters`)\r\n    .required('IMEI is required'),  \r\n  })\r\n}\r\n\r\nconst validate = (getValidationSchema) => {\r\n  return (values) => {\r\n    const validationSchema = getValidationSchema(values)\r\n    try {\r\n      validationSchema.validateSync(values, { abortEarly: false })\r\n      return {}\r\n    } catch (error) {\r\n      return getErrorsFromValidationError(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst getErrorsFromValidationError = (validationError) => {\r\n  const FIRST_ERROR = 0\r\n  return validationError.inner.reduce((errors, error) => {\r\n    return {\r\n      ...errors,\r\n      [error.path]: error.errors[FIRST_ERROR],\r\n    }\r\n  }, {})\r\n}\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  userName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  accept: false\r\n}\r\n\r\nconst onSubmit = (values, { setSubmitting, setErrors }) => {\r\n  setTimeout(() => {\r\n    alert(JSON.stringify(values, null, 2))\r\n    // console.log('User has been successfully saved!', values)\r\n    setSubmitting(false)\r\n  }, 2000)\r\n}\r\n\r\nconst findFirstError = (formName, hasError) => {\r\n  const form = document.forms[formName]\r\n  for (let i = 0; i < form.length; i++) {\r\n    if (hasError(form[i].name)) {\r\n      form[i].focus()\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nconst validateForm = (errors) => {\r\n  findFirstError('simpleForm', (fieldName) => {\r\n    return Boolean(errors[fieldName])\r\n  })\r\n}\r\n\r\n\r\nexport default function Devices() {\r\n  const { useState } = React;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal=(currentPage)=>{\r\n    if(currentPage*currentPagination < devicesData.length)\r\n      return currentPage*currentPagination;\r\n    return devicesData.length;\r\n  }\r\n  const fields = [    \r\n    { key: 'IMEI', _style: { width: '30%'} },        \r\n    { key: 'DeviceType', _style: { width: '30%'} },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n  \r\n  const removeDevice=(item)=>{\r\n    const device = devicesData.find( device => device.id === item.id)\r\n    //console.log(item.id)\r\n    //console.log(device)    \r\n    var index = devicesData.indexOf(device)\r\n    if (index !== -1) {\r\n      devicesData.splice(index, 1);\r\n    }\r\n    console.log(devicesData);\r\n  }\r\n\r\n  return (    \r\n    <div className=\"animated fadeIn\">\r\n      <CRow> \r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >  \r\n              <CFormGroup style={{padding:0, margin:0}}  row>            \r\n                <CCol md=\"4\" style={{alignSelf:'center'}}>\r\n                  Device List\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"8\" style={{textAlign:'right'}}>\r\n                  <CButton  variant=\"outline\" size=\"sm\" color=\"primary\"  onClick={()=> document.getElementById('imei-input').value='' } ><CIcon name=\"cil-plus\" />Add Device</CButton>\r\n                </CCol>\r\n              </CFormGroup>              \r\n            </CCardHeader>\r\n            <CCardBody>         \r\n            <CDataTable\r\n              items={devicesData}\r\n              fields={fields}\r\n              // columnFilter\r\n              tableFilter\r\n              // footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={currentPagination}\r\n              dark={false}\r\n              hover={false}\r\n              border={true}\r\n              outlined={true}\r\n              loading={false}\r\n              sorter\r\n              clickableRows\r\n              pagination={{ doubleArrows: true, align: 'center' }}\r\n              // loading\r\n              onRowClick={(item,index,col,e) => \r\n                {\r\n                console.log(item,index,col,e)\r\n                document.getElementById('imei-input').value = item.IMEI\r\n                }\r\n              }\r\n              onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n              }\r\n              onPagesChange={(val) => \r\n                console.log('new pages:', val)\r\n              }\r\n              onPaginationChange={(val) => {\r\n                console.log('new pagination:', val);\r\n                setCurrentPagination(val);\r\n              }}\r\n              // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n              // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n              // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n              // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n              scopedSlots = {{\r\n                'IMEI':\r\n                  (item)=>(\r\n                    <td>\r\n                        <CLink to={`/modules/devicemanagement/devices/${item.id}`}>{item.IMEI}</CLink>\r\n                    </td>\r\n                  ),\r\n                'actions':\r\n                  item => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton color=\"light\" onClick={()=>removeDevice(item)}><CIcon name=\"cil-trash\" /></CButton>                      \r\n                      </td>\r\n                    )\r\n                  }\r\n              }}\r\n            />\r\n            <div style={{textAlign:'right'}}>{              \r\n              ((currentPage-1)*currentPagination+1) + '-' + getLastVal(currentPage) +' of '+devicesData.length\r\n              } \r\n            </div>\r\n          </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n            <CCard custom>\r\n              <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex'}}> \r\n                Add Device                \r\n              </CCardHeader>   \r\n              <Formik\r\n                  initialValues={initialValues}\r\n                  validate={validate(validationSchema)}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {\r\n                    ({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      status,\r\n                      dirty,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      isValid,\r\n                      handleReset,\r\n                      setTouched\r\n                    }) => (           \r\n                    <CCardBody>\r\n                     <CForm onSubmit={handleSubmit} noValidate name='simpleForm'>\r\n                      <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                          <CLabel htmlFor=\"text-input\">IMEI</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                          {/* <CInput id=\"imei-input\" name=\"text-input\" placeholder=\"Please input imei\" /> */}\r\n                          <CInput type=\"text\"\r\n                              name=\"imei-input\"\r\n                              id=\"imei-input\"\r\n                              placeholder=\"Please input imei\"\r\n                              autoComplete=\"given-name\"\r\n                              valid={!errors.imei}\r\n                              invalid={touched.imei && !!errors.imei}\r\n                              autoFocus={true}\r\n                              required\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.imei} />\r\n                          <CInvalidFeedback>{errors.imei}</CInvalidFeedback>\r\n                        </CCol>\r\n                      </CFormGroup>\r\n                      <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                          <CLabel htmlFor=\"select\">Device Type</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                          <CSelect custom name=\"select\" id=\"select\">\r\n                            <option value=\"0\">Raspberry PI</option>\r\n                          </CSelect>\r\n                        </CCol>\r\n                      </CFormGroup>                \r\n                    </CForm>        \r\n                    <CCardFooter style={{textAlign:'center'}}>\r\n                      <CButton type=\"submit\"  variant=\"outline\" size=\"lg\" color=\"primary\" block><CIcon name=\"cil-save\" /> {isSubmitting ? 'Wait...' : 'Save'}</CButton>\r\n                      {/* <CButton type=\"reset\" color=\"danger\" className=\"mr-1\" onClick={handleReset}>Reset</CButton> */}\r\n                    </CCardFooter>    \r\n                  </CCardBody>\r\n                  )}\r\n              </Formik>    \r\n            </CCard>                 \r\n        </CCol>\r\n      </CRow>\r\n    </div>      \r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}