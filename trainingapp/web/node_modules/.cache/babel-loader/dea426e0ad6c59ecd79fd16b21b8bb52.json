{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Modules\\\\index.jsx\";\nimport React, { Component, Suspense } from 'react'; //import * as router from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport { CFooter, CHeader } from '@coreui/react';\nimport DefaultContent from './DefaultContent.js';\nexport const Context = React.createContext({\n  show: false\n});\nconst DefaultSidebar = React.lazy(() => import('./DefaultSidebar'));\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader')); // import Navigation from '../../Layout/Navigation';\n// import { useStyles } from '../../Layout/Theme/DashboardTheme';\n// import Copyright from '../../Layout/Copyright';\n// import Devices from '../Devicemanagement/Devices';\n// import DeviceDashboard from '../Devicemanagement/DeviceDashboard';\n// import { deviceMenuItems } from '../Devicemanagement/DeviceMenuItems';\n// import Logo from '../../../assets/images/logo.png';\n\nclass Modules extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"animated fadeIn pt-1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sk-spinner sk-spinner-pulse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 69\n      }\n    }));\n\n    this.c = {};\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.toggleSidebarMobile = this.toggleSidebarMobile.bind(this);\n    this.minimizeSidebar = this.minimizeSidebar.bind(this);\n    this.closeSidebar = this.closeSidebar.bind(this);\n    this.toggleAside = this.toggleAside.bind(this);\n    this.getAside = this.getAside.bind(this);\n    this.toggleTheme = this.toggleTheme.bind(this);\n    this.state = {\n      isAsideOpen: false,\n      isSidebarOpen: 'responsive',\n      isSidebarMinimized: false,\n      themeDark: false,\n      sidebarMobile: false,\n      sidebarDisplay: 'sm'\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    /*\r\n    if (this.props.color !== nextProps.color) {\r\n      return true;\r\n    }\r\n      if (this.state.isAsideOpen !== nextState.isAsideOpen) {\r\n      return false;\r\n    }*/\n    return true;\n  }\n\n  toggleSidebar(display, mobile) {\n    //alert('sidebar')\n    const sidebarOpened = this.state.isSidebarOpen === true || this.state.isSidebarOpen === 'responsive';\n    this.setState({\n      isSidebarOpen: sidebarOpened ? false : 'responsive'\n    });\n  }\n\n  toggleSidebarMobile(display, mobile) {\n    const sidebarClosed = this.state.isSidebarOpen === 'responsive' || this.state.isSidebarOpen === false;\n    this.setState({\n      isSidebarOpen: sidebarClosed ? true : 'responsive'\n    });\n  }\n\n  minimizeSidebar() {\n    this.setState({\n      isSidebarMinimized: !this.state.isSidebarMinimized\n    });\n  }\n\n  closeSidebar() {\n    this.setState({\n      isSidebarOpen: 'responsive'\n    });\n  }\n\n  getAside(f) {\n    this.toggleThisAside = f;\n  }\n\n  toggleAside() {\n    this.toggleThisAside && this.toggleThisAside();\n    return;\n  }\n\n  toggleTheme() {\n    this.setState({\n      themeDark: !this.state.themeDark\n    });\n  }\n\n  render() {\n    //for (let name in React.icons)\n    //console.log(name);\n    // dark theme\n    const classes = classNames('c-app c-default-layout', this.state.themeDark ? 'c-dark-theme' : false);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DefaultSidebar, {\n      sidebarShow: this.state.isSidebarOpen,\n      sidebarMinimize: this.state.isSidebarMinimized,\n      sidebarDisplay: this.state.sidebarDisplay,\n      sidebarMobile: this.state.sidebarMobile,\n      onChange: this.closeSidebar,\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Modules;","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Modules/index.jsx"],"names":["React","Component","Suspense","classNames","CFooter","CHeader","DefaultContent","Context","createContext","show","DefaultSidebar","lazy","DefaultAside","DefaultFooter","DefaultHeader","Modules","constructor","props","loading","c","toggleSidebar","bind","toggleSidebarMobile","minimizeSidebar","closeSidebar","toggleAside","getAside","toggleTheme","state","isAsideOpen","isSidebarOpen","isSidebarMinimized","themeDark","sidebarMobile","sidebarDisplay","shouldComponentUpdate","nextProps","nextState","display","mobile","sidebarOpened","setState","sidebarClosed","f","toggleThisAside","render","classes","location"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\r\n//import * as router from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { CFooter, CHeader } from '@coreui/react';\r\nimport DefaultContent from './DefaultContent.js';\r\n\r\n\r\nexport const Context = React.createContext({show: false});\r\n\r\nconst DefaultSidebar = React.lazy(() => import('./DefaultSidebar'));\r\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\n// import Navigation from '../../Layout/Navigation';\r\n// import { useStyles } from '../../Layout/Theme/DashboardTheme';\r\n// import Copyright from '../../Layout/Copyright';\r\n// import Devices from '../Devicemanagement/Devices';\r\n// import DeviceDashboard from '../Devicemanagement/DeviceDashboard';\r\n// import { deviceMenuItems } from '../Devicemanagement/DeviceMenuItems';\r\n// import Logo from '../../../assets/images/logo.png';\r\n\r\nclass Modules extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.c = {};\r\n\r\n    this.toggleSidebar = this.toggleSidebar.bind(this);\r\n    this.toggleSidebarMobile = this.toggleSidebarMobile.bind(this);\r\n    this.minimizeSidebar = this.minimizeSidebar.bind(this);\r\n    this.closeSidebar = this.closeSidebar.bind(this);\r\n    this.toggleAside = this.toggleAside.bind(this);\r\n    this.getAside = this.getAside.bind(this);\r\n    this.toggleTheme = this.toggleTheme.bind(this);\r\n    this.state = {\r\n      isAsideOpen: false,\r\n      isSidebarOpen: 'responsive',\r\n      isSidebarMinimized: false,\r\n      themeDark: false,\r\n      sidebarMobile: false,\r\n      sidebarDisplay: 'sm'\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    /*\r\n    if (this.props.color !== nextProps.color) {\r\n      return true;\r\n    }\r\n\r\n    if (this.state.isAsideOpen !== nextState.isAsideOpen) {\r\n      return false;\r\n    }*/\r\n    return true;\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\"><div className=\"sk-spinner sk-spinner-pulse\"></div></div>;\r\n\r\n\r\n  toggleSidebar(display, mobile) {\r\n    //alert('sidebar')\r\n    const sidebarOpened = this.state.isSidebarOpen === true || this.state.isSidebarOpen === 'responsive'\r\n    this.setState({\r\n      isSidebarOpen: sidebarOpened ? false : 'responsive',\r\n    });\r\n  }\r\n\r\n  toggleSidebarMobile(display, mobile) {\r\n    const sidebarClosed = this.state.isSidebarOpen === 'responsive' || this.state.isSidebarOpen === false\r\n    this.setState({\r\n      isSidebarOpen: sidebarClosed ? true : 'responsive',\r\n    });\r\n  }\r\n\r\n  minimizeSidebar() {\r\n    this.setState({\r\n      isSidebarMinimized: !this.state.isSidebarMinimized\r\n    });\r\n  }\r\n\r\n  closeSidebar() {\r\n    this.setState({\r\n      isSidebarOpen: 'responsive',\r\n    });\r\n  }\r\n\r\n  getAside(f) {\r\n    this.toggleThisAside = f;\r\n  }\r\n\r\n  toggleAside() {\r\n    this.toggleThisAside && this.toggleThisAside();\r\n    return;\r\n  }\r\n\r\n  toggleTheme() {\r\n    this.setState({\r\n      themeDark: !this.state.themeDark\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    //for (let name in React.icons)\r\n    //console.log(name);\r\n\r\n    // dark theme\r\n    const classes = classNames(\r\n    'c-app c-default-layout',\r\n    this.state.themeDark ? 'c-dark-theme' : false\r\n    );\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <DefaultSidebar\r\n          sidebarShow={this.state.isSidebarOpen}\r\n          sidebarMinimize={this.state.isSidebarMinimized}\r\n          sidebarDisplay={this.state.sidebarDisplay}\r\n          sidebarMobile={this.state.sidebarMobile}\r\n          onChange={this.closeSidebar}\r\n          location={this.props.location}\r\n        />\r\n        {/* <DefaultAside\r\n          sidebarShow={this.state.isAsideOpen}\r\n          toggleAside={this.toggleAside}\r\n          getToggleAside={this.getAside}\r\n        /> */}\r\n        <div className=\"c-wrapper\">\r\n          {/* <CHeader withSubheader>\r\n            <Suspense  fallback={this.loading()}>\r\n              <DefaultHeader\r\n                toggleSidebar={this.toggleSidebar}\r\n                toggleSidebarMobile={this.toggleSidebarMobile}\r\n                toggleAside={this.toggleAside}\r\n                toggleTheme={this.toggleTheme}\r\n              />\r\n            </Suspense>\r\n          </CHeader> */}\r\n          {/* <div className=\"c-body\">\r\n            <DefaultContent/>\r\n            <CFooter>\r\n              <Suspense fallback={this.loading()}>\r\n                <DefaultFooter />\r\n              </Suspense>\r\n            </CFooter>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modules;\r\n"]},"metadata":{},"sourceType":"module"}