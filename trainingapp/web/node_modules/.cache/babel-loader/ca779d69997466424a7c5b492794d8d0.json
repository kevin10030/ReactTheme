{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Admin\\\\Categories.jsx\";\nimport React, { Component, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport CategoryService from '../../API/CategoryService';\nexport default function Categories() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < devicesData.length) return currentPage * currentPagination;\n    return devicesData.length;\n  };\n\n  const fields = [{\n    key: 'CategoryName',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'ParentCategory',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '15%'\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [categoryList, setCategoryList] = React.useState([]);\n  const [categoryName, setCategoryName] = React.useState('');\n  const [parent, setParent] = React.useState(0);\n  React.useEffect(() => {\n    getCategoryList();\n  }, []);\n\n  const getCategoryList = async () => {\n    // get categories from backend service via service api\n    const dataList = await CategoryService.getCategoryList('', res => {\n      return res;\n    }, err => {});\n\n    if (dataList) {\n      setCategoryList(dataList);\n    }\n  }; // const [isAddDevice, setIsAddDevice] = useState(true)\n  // const [editId, setEditId] = useState(-1)\n\n\n  const deleteCategory = item => {\n    CategoryService.deleteCategory(item.id, res => {// setToastClass('success');\n      // setToastMessage('Success: ' + data);\n      // showToast(true);\n    }, err => {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    CategoryService.createCategory({\n      'name': categoryName,\n      'parent': parent\n    }, res => {\n      // setToastClass('success');\n      // setToastMessage('Success: ' + data);\n      // showToast(true);\n      setCategoryName('');\n      setParent(0);\n    }, err => {});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Categories\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: devicesData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    } // onPagesChange={(val) => console.log('new pages:', val)}\n    ,\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'IMEI': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CLink, {\n        to: `/modules/devicemanagement/devices/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, item.IMEI)),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        }, editId != item.id ? /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            editDevice(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 112\n          }\n        })) : /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          variant: \"outline\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-pencil\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 83\n          }\n        })), /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: e => {\n            e.preventDefault();\n            removeDevice(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 111\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + devicesData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, isAddDevice ? 'Add Device' : 'Edit Device'), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    onSubmit: handleSubmit,\n    className: \"form-horizontal\",\n    name: \"simpleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"categoryname-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Category Name\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    label: \"Category Name\",\n    name: \"categoryname-input\",\n    id: \"categoryname-input\",\n    placeholder: \"Please input category name\",\n    autoComplete: \"given-name\",\n    onChange: e => setCategoryName(e.target.value),\n    value: categoryName,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Device Type\")), /*#__PURE__*/React.createElement(CCol, {\n    xs: \"12\",\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CSelect, {\n    custom: true,\n    name: \"select\",\n    id: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    id: \"devicetype-select\",\n    value: \"Raspberry PI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, \"Raspberry PI\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"primary\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 97\n    }\n  }), \" Save\"), /*#__PURE__*/React.createElement(CButton, {\n    type: \"reset\",\n    variant: \"outline\",\n    className: \"mr-1\",\n    color: \"danger\",\n    onClick: handleReset,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CIcon, {\n    name: \"cil-ban\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 117\n    }\n  }), \" Reset\")))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Admin/Categories.jsx"],"names":["React","Component","useEffect","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CForm","CFormGroup","CFormText","CLink","CInput","CLabel","CSelect","CIcon","CategoryService","Categories","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","devicesData","length","fields","key","_style","width","label","sorter","filter","categoryList","setCategoryList","categoryName","setCategoryName","parent","setParent","getCategoryList","dataList","res","err","deleteCategory","item","id","handleSubmit","event","preventDefault","createCategory","doubleArrows","align","val","console","log","IMEI","editId","e","editDevice","removeDevice","textAlign","display","isAddDevice","target","value","handleReset"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow, CDataTable, CForm, CFormGroup, CFormText, CLink, CInput, CLabel, CSelect,\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\nimport CategoryService from '../../API/CategoryService';\r\n\r\nexport default function Categories() {\r\n  const { useState } = React;\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal = (currentPage) => {\r\n    if (currentPage * currentPagination < devicesData.length)\r\n      return currentPage * currentPagination;\r\n    return devicesData.length;\r\n  }\r\n  const fields = [\r\n    { key: 'CategoryName', _style: { width: '30%' } },\r\n    { key: 'ParentCategory', _style: { width: '30%' } },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '15%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n  \r\n  const [categoryList, setCategoryList] = React.useState([])\r\n  const [categoryName, setCategoryName] = React.useState('');\r\n  const [parent, setParent] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    getCategoryList();\r\n  }, []);\r\n\r\n  const getCategoryList = async () => {\r\n    // get categories from backend service via service api\r\n    const dataList = await CategoryService.getCategoryList('', (res) => {\r\n      return res;\r\n    }, (err) => {\r\n    });\r\n    if(dataList) { setCategoryList(dataList); }\r\n  };\r\n  \r\n  // const [isAddDevice, setIsAddDevice] = useState(true)\r\n  // const [editId, setEditId] = useState(-1)\r\n\r\n  const deleteCategory = (item) => {\r\n    CategoryService.deleteCategory(item.id, (res) => {\r\n      // setToastClass('success');\r\n      // setToastMessage('Success: ' + data);\r\n      // showToast(true);\r\n    }, (err) => {\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    CategoryService.createCategory(\r\n      {\r\n        'name': categoryName,\r\n        'parent': parent\r\n      }, (res) => {\r\n        // setToastClass('success');\r\n        // setToastMessage('Success: ' + data);\r\n        // showToast(true);\r\n        setCategoryName('');\r\n        setParent(0);\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow>\r\n        <CCol xl=\"7\">\r\n          <CCard custom>\r\n            <CCardHeader >\r\n              Categories\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={devicesData}\r\n                fields={fields}\r\n                // columnFilter\r\n                tableFilter\r\n                // footer\r\n                itemsPerPageSelect\r\n                itemsPerPage={currentPagination}\r\n                dark={false}\r\n                hover={false}\r\n                border={true}\r\n                outlined={true}\r\n                loading={false}\r\n                sorter\r\n                // clickableRows\r\n                pagination={{ doubleArrows: true, align: 'center' }}\r\n                // loading\r\n                // onRowClick={(item,index,col,e) => {console.log(item,index,col,e)}}\r\n                onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n                }\r\n                // onPagesChange={(val) => console.log('new pages:', val)}\r\n                onPaginationChange={(val) => {\r\n                  console.log('new pagination:', val);\r\n                  setCurrentPagination(val);\r\n                }}\r\n                // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n                // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n                // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n                // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n                scopedSlots={{\r\n                  'IMEI':\r\n                    (item) => (\r\n                      <td>\r\n                        <CLink to={`/modules/devicemanagement/devices/${item.id}`}>{item.IMEI}</CLink>\r\n                      </td>\r\n                    ),\r\n                  'actions':\r\n                    item => {\r\n                      return (\r\n                        <td className=\"py-2\">\r\n                          {\r\n                            editId != item.id ?\r\n                              <CButton color=\"light\" onClick={(e) => { e.preventDefault(); editDevice(item) }}><CIcon name=\"cil-pencil\" /></CButton>\r\n                              : <CButton color=\"light\" variant=\"outline\" disabled><CIcon name=\"cil-pencil\" /></CButton>\r\n                          }\r\n                          <CButton color=\"light\"  onClick={(e) => { e.preventDefault(); removeDevice(item) }}><CIcon name=\"cil-trash\" /></CButton>\r\n                        </td>\r\n                      )\r\n                    }\r\n                }}\r\n              />\r\n              <div style={{ textAlign: 'right' }}>{\r\n                ((currentPage - 1) * currentPagination + 1) + '-' + getLastVal(currentPage) + ' of ' + devicesData.length\r\n              }\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"5\">\r\n          <CCard custom>\r\n            <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex' }}>\r\n              {\r\n                isAddDevice ? 'Add Device' : 'Edit Device'\r\n              }\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\" name='simpleForm'>\r\n                {/* onSubmit={handleSubmit} */}\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"categoryname-input\">Category Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CInput type=\"text\"\r\n                      label=\"Category Name\"\r\n                      name=\"categoryname-input\"\r\n                      id=\"categoryname-input\"\r\n                      placeholder=\"Please input category name\"\r\n                      autoComplete=\"given-name\"\r\n                      onChange={e => setCategoryName(e.target.value)}\r\n                      value={categoryName}\r\n                      required />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"4\">\r\n                    <CLabel htmlFor=\"select\">Device Type</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"8\">\r\n                    <CSelect custom name=\"select\" id=\"select\">\r\n                      <option id=\"devicetype-select\" value=\"Raspberry PI\">Raspberry PI</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <hr />\r\n                <CButton type=\"submit\" variant=\"outline\" className=\"mr-1\" color=\"primary\" block><CIcon name=\"cil-save\" /> Save</CButton>\r\n                <CButton type=\"reset\" variant=\"outline\" className=\"mr-1\" color=\"danger\" onClick={handleReset} block><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}