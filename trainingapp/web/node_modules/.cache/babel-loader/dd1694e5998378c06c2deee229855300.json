{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\WebSite\\\\VerificationPage.js\";\nimport React from \"react\";\nimport { NavLink as RouterLink, Route, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify'; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport Code from \"@material-ui/icons/Code\";\nimport Group from \"@material-ui/icons/Group\";\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport GridContainer from \"../../Layout/Grid/GridContainer.js\";\nimport GridItem from \"../../Layout/Grid/GridItem.js\";\nimport Button from \"../../Layout/CustomButtons/Button.js\";\nimport CustomInput from \"../../Layout/CustomInput/CustomInput.js\";\nimport InfoArea from \"../../Layout/InfoArea/InfoArea.js\";\nimport Card from \"../../Layout/Card/Card.js\";\nimport CardBody from \"../../Layout/Card/CardBody.js\";\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/registerPageStyle\";\nconst useStyles = makeStyles(styles);\nexport default function VerificationPage() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstname, setFirstname] = React.useState('');\n  const [lastname, setLastname] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  Amplify.configure({\n    Auth: {\n      region: process.env.REACT_APP_AWS_REGION,\n      userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n      userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const {\n        userConfirmed\n      } = await Auth.signUp({\n        username: email,\n        password: password,\n        attributes: {\n          name: firstname + ' ' + lastname\n        }\n      });\n\n      if (!userConfirmed) {\n        localStorage.setItem('userEmail', email);\n        history.push('/auth/verify');\n      } //console.log(user);\n\n\n      setFirstname('');\n      setLastname('');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 8,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardSignup,\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"signUpForm\",\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Face, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      })),\n      onChange: event => {\n        setFirstname(event.target.value);\n      },\n      placeholder: \"First Name...\"\n    },\n    value: firstname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      onChange: event => {\n        setLastname(event.target.value);\n      },\n      placeholder: \"Last Name...\"\n    },\n    value: lastname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      })),\n      onChange: event => {\n        setEmail(event.target.value);\n      },\n      type: \"email\",\n      placeholder: \"Email...\"\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    formControlProps: {\n      fullWidth: true,\n      className: classes.customFormControlClasses\n    },\n    inputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        className: classes.inputAdornment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(LockOutlined, {\n        className: classes.inputAdornmentIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, \"lock_outline\")),\n      onChange: event => {\n        setPassword(event.target.value);\n      },\n      type: \"password\",\n      autoComplete: \"off\",\n      placeholder: \"Password...\"\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    style: {\n      marginTop: 30,\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    round: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, \"Get started\"))))))))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/WebSite/VerificationPage.js"],"names":["React","NavLink","RouterLink","Route","useHistory","Amplify","Auth","makeStyles","InputAdornment","Checkbox","FormControlLabel","Icon","Timeline","Code","Group","Face","Email","LockOutlined","Check","GridContainer","GridItem","Button","CustomInput","InfoArea","Card","CardBody","styles","useStyles","VerificationPage","classes","history","firstname","setFirstname","useState","lastname","setLastname","email","setEmail","password","setPassword","configure","region","process","env","REACT_APP_AWS_REGION","userPoolId","REACT_APP_AWS_USER_POOL_ID","userPoolWebClientId","REACT_APP_AWS_USER_POOL_CLIENT_ID","handleSubmit","event","preventDefault","userConfirmed","signUp","username","attributes","name","localStorage","setItem","push","error","console","log","container","cardSignup","margin","cardTitle","form","fullWidth","className","customFormControlClasses","startAdornment","inputAdornment","inputAdornmentIcon","onChange","target","value","placeholder","type","autoComplete","center","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { NavLink as RouterLink, Route, useHistory } from \"react-router-dom\";\nimport Amplify, { Auth } from 'aws-amplify';\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Icon from \"@material-ui/core/Icon\";\n\n// @material-ui/icons\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport Code from \"@material-ui/icons/Code\";\nimport Group from \"@material-ui/icons/Group\";\nimport Face from \"@material-ui/icons/Face\";\nimport Email from \"@material-ui/icons/Email\";\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\nimport Check from \"@material-ui/icons/Check\";\n\n\n// core components\nimport GridContainer from \"../../Layout/Grid/GridContainer.js\";\nimport GridItem from \"../../Layout/Grid/GridItem.js\";\nimport Button from \"../../Layout/CustomButtons/Button.js\";\nimport CustomInput from \"../../Layout/CustomInput/CustomInput.js\";\nimport InfoArea from \"../../Layout/InfoArea/InfoArea.js\";\nimport Card from \"../../Layout/Card/Card.js\";\nimport CardBody from \"../../Layout/Card/CardBody.js\";\n\nimport styles from \"../../../assets/material/jss/material-dashboard-pro-react/views/registerPageStyle\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function VerificationPage() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstname, setFirstname] = React.useState('');\n  const [lastname, setLastname] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  Amplify.configure({\n    Auth: {\n      region: process.env.REACT_APP_AWS_REGION,\n      userPoolId: process.env.REACT_APP_AWS_USER_POOL_ID,\n      userPoolWebClientId: process.env.REACT_APP_AWS_USER_POOL_CLIENT_ID\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const { userConfirmed } = await Auth.signUp({\n        username: email,\n        password: password,\n        attributes: {\n          name: firstname + ' ' + lastname\n        }\n      });\n      if(!userConfirmed) {\n        localStorage.setItem('userEmail', email);\n        history.push('/auth/verify');\n      }\n      //console.log(user);\n      setFirstname('');\n      setLastname('');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  }\n\n  return (\n    <div className={classes.container}>\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={8} md={6}>\n          <Card className={classes.cardSignup} style={{margin:0}}>\n            <h2 className={classes.cardTitle}>Register</h2>\n            <CardBody>\n              <GridContainer justify=\"center\">\n                <GridItem xs={12} sm={12} md={12}>                 \n                  <form id=\"signUpForm\" className={classes.form} onSubmit={handleSubmit}>\n                    <GridContainer>\n                      <GridItem xs={12} sm={6}>\n                        <CustomInput\n                          formControlProps={{\n                            fullWidth: true,\n                            className: classes.customFormControlClasses\n                          }}\n                          inputProps={{\n                            startAdornment: (\n                              <InputAdornment\n                                position=\"start\"\n                                className={classes.inputAdornment}\n                              >\n                                <Face className={classes.inputAdornmentIcon} />\n                              </InputAdornment>\n                            ),\n                            onChange: event => {                      \n                              setFirstname(event.target.value)\n                            },\n                            placeholder: \"First Name...\"\n                          }}\n                          value={firstname}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={6}>\n                          <CustomInput\n                            formControlProps={{\n                              fullWidth: true,\n                              className: classes.customFormControlClasses\n                            }}\n                            inputProps={{\n                              onChange: event => {                      \n                                setLastname(event.target.value)\n                              },\n                              placeholder: \"Last Name...\"\n                            }}\n                            value={lastname}\n                          />\n                      </GridItem>\n                    </GridContainer>\n                    <CustomInput\n                      formControlProps={{\n                        fullWidth: true,\n                        className: classes.customFormControlClasses\n                      }}\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment\n                            position=\"start\"\n                            className={classes.inputAdornment}\n                          >\n                            <Email className={classes.inputAdornmentIcon} />\n                          </InputAdornment>\n                        ),\n                        onChange: event => {                      \n                          setEmail(event.target.value)\n                        },\n                        type: \"email\",\n                        placeholder: \"Email...\"\n                      }}\n                      value={email}\n                    />\n                    <CustomInput                      \n                      formControlProps={{\n                        fullWidth: true,\n                        className: classes.customFormControlClasses\n                      }}\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment\n                            position=\"start\"\n                            className={classes.inputAdornment}\n                          >\n                            <LockOutlined className={classes.inputAdornmentIcon}>\n                              lock_outline\n                            </LockOutlined>\n                          </InputAdornment>\n                        ),\n                        onChange: event => {                      \n                          setPassword(event.target.value)\n                        },\n                        type: \"password\",\n                        autoComplete: \"off\",\n                        placeholder: \"Password...\"\n                      }}\n                      value={password}\n                    />                                      \n                    <div className={classes.center} style={{marginTop:30, marginBottom:0}}>\n                      <Button type=\"submit\" round color=\"primary\">\n                        Get started\n                      </Button>\n                    </div>\n                  </form>\n                </GridItem>\n              </GridContainer>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}