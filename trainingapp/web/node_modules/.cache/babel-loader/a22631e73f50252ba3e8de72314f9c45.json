{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSH\\\\A\\\\IoT\\\\Web\\\\trainingapp\\\\web\\\\trainingapp\\\\src\\\\components\\\\Views\\\\Devicemanagement\\\\Devices.jsx\";\nimport React, { Component } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CDataTable, CFormGroup, CInputCheckbox, CLink, CInput } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport devicesData from './DevicesData.js';\nexport default function Devices() {\n  const {\n    useState\n  } = React;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPagination, setCurrentPagination] = useState(5);\n\n  const getLastVal = currentPage => {\n    if (currentPage * currentPagination < devicesData.length) return currentPage * currentPagination;\n    return devicesData.length;\n  };\n\n  const fields = [{\n    key: 'IMEI',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'DeviceType',\n    _style: {\n      width: '30%'\n    }\n  }, {\n    key: 'actions',\n    label: '',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n  const [devicesData, setDevicesData] = React.useState([]);\n\n  const removeDevice = item => {\n    const device = devicesData.find(device => device.id === item.id);\n    console.log(item.id);\n    console.log(device);\n    var index = devicesData.indexOf(device);\n\n    if (index !== -1) {\n      devicesData.splice(index, 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animated fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    xl: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Device List\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: devicesData,\n    fields: fields // columnFilter\n    ,\n    tableFilter: true // footer\n    ,\n    itemsPerPageSelect: true,\n    itemsPerPage: currentPagination,\n    dark: false,\n    hover: false,\n    border: true,\n    outlined: true,\n    loading: false,\n    sorter: true // clickableRows\n    ,\n    pagination: {\n      doubleArrows: true,\n      align: 'center'\n    } // loading\n    // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\n    ,\n    onPageChange: val => {\n      console.log('new page:', val);\n      setCurrentPage(val);\n    },\n    onPagesChange: val => console.log('new pages:', val),\n    onPaginationChange: val => {\n      console.log('new pagination:', val);\n      setCurrentPagination(val);\n    } // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n    // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n    // onTableFilterChange={(val) => console.log('new table filter:', val)}\n    // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n    ,\n    scopedSlots: {\n      'IMEI': item => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CLink, {\n        to: `/modules/devicemanagement/devices/${item.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, item.IMEI)),\n      'actions': item => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"light\",\n          onClick: () => removeDevice(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 81\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, (currentPage - 1) * currentPagination + 1 + '-' + getLastVal(currentPage) + ' of ' + devicesData.length)))), /*#__PURE__*/React.createElement(CCol, {\n    xl: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    id: \"headingOne\",\n    style: {\n      display: 'inline-flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Add Device\")))));\n}","map":{"version":3,"sources":["D:/CSH/A/IoT/Web/trainingapp/web/trainingapp/src/components/Views/Devicemanagement/Devices.jsx"],"names":["React","Component","CButton","CCard","CCardBody","CCardHeader","CCol","CRow","CDataTable","CFormGroup","CInputCheckbox","CLink","CInput","CIcon","devicesData","Devices","useState","currentPage","setCurrentPage","currentPagination","setCurrentPagination","getLastVal","length","fields","key","_style","width","label","sorter","filter","setDevicesData","removeDevice","item","device","find","id","console","log","index","indexOf","splice","doubleArrows","align","val","IMEI","textAlign","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,  CDataTable, CFormGroup,CInputCheckbox,CLink,CInput\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport devicesData from './DevicesData.js'\r\n\r\nexport default function Devices() {\r\n  const { useState } = React;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [currentPagination, setCurrentPagination] = useState(5)\r\n  const getLastVal=(currentPage)=>{\r\n    if(currentPage*currentPagination < devicesData.length)\r\n      return currentPage*currentPagination;\r\n    return devicesData.length;\r\n  }\r\n  const fields = [    \r\n    { key: 'IMEI', _style: { width: '30%'} },        \r\n    { key: 'DeviceType', _style: { width: '30%'} },\r\n    {\r\n      key: 'actions',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    },\r\n  ]\r\n\r\n  const [devicesData, setDevicesData] = React.useState([]);\r\n\r\n  const removeDevice=(item)=>{\r\n    const device = devicesData.find( device => device.id === item.id)\r\n    console.log(item.id)\r\n    console.log(device)    \r\n    var index = devicesData.indexOf(device)\r\n    if (index !== -1) {\r\n      devicesData.splice(index, 1);\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <CRow> \r\n        <CCol xl=\"8\">\r\n          <CCard custom>\r\n            <CCardHeader>\r\n              Device List\r\n            </CCardHeader>\r\n            <CCardBody>         \r\n            <CDataTable\r\n              items={devicesData}\r\n              fields={fields}\r\n              // columnFilter\r\n              tableFilter\r\n              // footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={currentPagination}\r\n              dark={false}\r\n              hover={false}\r\n              border={true}\r\n              outlined={true}\r\n              loading={false}\r\n              sorter\r\n              // clickableRows\r\n              pagination={{ doubleArrows: true, align: 'center' }}\r\n              // loading\r\n              // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\r\n              onPageChange={(val) => {\r\n                  console.log('new page:', val);\r\n                  setCurrentPage(val)\r\n                }\r\n              }\r\n              onPagesChange={(val) => \r\n                console.log('new pages:', val)\r\n              }\r\n              onPaginationChange={(val) => {\r\n                console.log('new pagination:', val);\r\n                setCurrentPagination(val);\r\n              }}\r\n              // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\r\n              // onSorterValueChange={(val) => console.log('new sorter value:', val)}\r\n              // onTableFilterChange={(val) => console.log('new table filter:', val)}\r\n              // onColumnFilterChange={(val) => console.log('new column filter:', val)}\r\n              scopedSlots = {{\r\n                'IMEI':\r\n                  (item)=>(\r\n                    <td>\r\n                        <CLink to={`/modules/devicemanagement/devices/${item.id}`}>{item.IMEI}</CLink>\r\n                    </td>\r\n                  ),\r\n                'actions':\r\n                  item => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton color=\"light\" onClick={()=>removeDevice(item)}><CIcon name=\"cil-trash\" /></CButton>                      \r\n                      </td>\r\n                    )\r\n                  }\r\n              }}\r\n            />\r\n            <div style={{textAlign:'right'}}>{              \r\n              ((currentPage-1)*currentPagination+1) + '-' + getLastVal(currentPage) +' of '+devicesData.length\r\n              } \r\n            </div>\r\n          </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xl=\"4\">\r\n            <CCard custom>\r\n              <CCardHeader id=\"headingOne\" style={{ display: 'inline-flex'}}> \r\n                Add Device\r\n              </CCardHeader>\r\n              \r\n            </CCard>                 \r\n        </CCol>\r\n      </CRow>\r\n    </div>      \r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}